{
  "data": [{
    "id": "9577211",
    "type": "contents",
    "attributes": {
      "uri": "rw://koenig/post/250572",
      "name": "Scoped Storage in Android 10: Getting Started",
      "description": "In this tutorial, you’ll learn how to use scoped storage in your Android 10 app by building a simple image gallery.\n",
      "released_at": "2020-05-20T12:30:01.000Z",
      "free": true,
      "difficulty": "beginner",
      "content_type": "article",
      "duration": 1080,
      "popularity": 68602,
      "technology_triple_string": "Kotlin 1.3, Android 4.4, Android Studio 3.6",
      "contributor_string": "Julia Zinchenko, Sandra Grauschopf, Fabio Bombardi, Eric Soto, Aldo Olivares & Anshdeep Singh",
      "ordinal": null,
      "professional": false,
      "description_plain_text": "In this tutorial, you’ll learn how to use scoped storage in your Android 10 app by building a simple image gallery.\n",
      "video_identifier": null,
      "parent_name": null,
      "accessible": true,
      "card_artwork_url": "https://koenig-media.raywenderlich.com/uploads/2020/04/ScopedStorage-feature.png",
      "body": "\n\n<p>Working with the file system is an important part of developing any Android app. Up until Android 10, when you gave an app storage permission, it could access any file on the device. However, most apps don’t need access to the whole storage system. They usually perform tasks on a single file or a small group of files. This created a threat to user privacy.</p>\n<p>In Android 10, Google introduced the concept of <em>scoped storage</em>, which enhances user control and privacy while cutting back the file clutter that removed apps leave behind. </p>\n<p>In this tutorial, you’ll build a simple gallery app called <em>Scopeo</em>, which displays the photos from the device’s shared storage. Along the way, you’ll learn about:</p>\n<ul>\n<li>What scoped storage is and why you need it.</li>\n<li>Adding the correct <em>permissions</em> when working with files.</li>\n<li>Using <code>MediaStore</code> APIs to access the files.</li>\n<li>How to <em>opt out</em> of scoped storage, if required.</li>\n<li>\n<em>Deleting</em> files in <code>MediaStore</code> directly by using an <code>IntentSender</code>.</li>\n</ul>\n<div class=\"note\">\n<em>Note</em>: This tutorial assumes you’re familiar with the basics of Android development in Kotlin. If you’re completely new to Kotlin and Android, check out this <a href=\"https://www.raywenderlich.com/1144981-kotlin-for-android-an-introduction\" rel=\"noopener\" target=\"_blank\">Kotlin tutorial</a> and this <a href=\"https://www.raywenderlich.com/478209-beginning-android-development-with-kotlin-part-one-installing-android-studio\" rel=\"noopener\" target=\"_blank\">Beginning Android Development tutorial</a>. \n<p>You should also have some familiarity with Google’s architecture components, such as <em>LiveData</em> and <em>ViewModel</em>. Go through <a href=\"https://www.raywenderlich.com/6729-android-jetpack-architecture-components-getting-started\" rel=\"noopener\" target=\"_blank\">Android Jetpack Architecture Components: Getting Started</a> to learn more about them.\n</p>\n</div>\n<h2 id=\"toc-anchor-001\">Getting Started</h2>\n<p>Click the <em>Download Materials</em> button at the top or bottom of the page to download the starter and final projects.</p>\n<p>Open Android Studio 3.6.1 or later and choose <em>Open an existing Android Studio project</em>. Then navigate to the <em>starter</em> project directory inside the main folder and click <em>Open</em>. Wait for Gradle to sync successfully and take some time to familiarize yourself with the code.</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screen-Shot-2020-04-03-at-2.54.56-PM.png\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screen-Shot-2020-04-03-at-2.54.56-PM.png\" alt=\"Project Structure\" width=\"307\" height=\"163\" class=\"aligncenter bordered size-full wp-image-251833\"></a></p>\n<p>As you see from the screenshot above, the starter project contains the following files:</p>\n<ul>\n<li>\n<em>Image.kt</em> is a simple data class that contains some properties of the image. It also includes a <code>DiffCallback</code> to efficiently update the image list when the user deletes an image.</li>\n<li>\n<em>MainActivity.kt</em> is where all the UI interactions occur. It contains a lot of boilerplate code already implemented for you. For simplicity, it also contains <code>GalleryAdapter</code> and <code>ImageViewHolder</code> in the same file.</li>\n<li>\n<em>MainActivityViewModel.kt</em> contains all the business logic of the app. You’ll add code in this class to perform time-consuming operations in the background. You’ll observe the changes using <code>LiveData</code>. All the background tasks use the recommended approach, <em>Kotlin coroutines</em>, which work well with <code>ViewModel</code>.</li>\n</ul>\n<div class=\"note\">\n<em>Note</em>: If you want to know more about <code>DiffUtil.Callback</code>, look at <a href=\"https://developer.android.com/reference/kotlin/androidx/recyclerview/widget/DiffUtil.Callback\" rel=\"noopener\" target=\"_blank\">Android’s callback documentation</a> or <a href=\"https://developer.android.com/kotlin/coroutines\" rel=\"noopener\" target=\"_blank\">the official Kotlin coroutines documentation</a>.\n</div>\n<p>Now that you’ve looked over the codebase, build and run. You’ll see the following screen:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1584989693.png\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1584989693-243x500.png\" alt=\"Scopeo Home Screen\" width=\"243\" height=\"500\" class=\"aligncenter bordered size-large wp-image-251664\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1584989693-243x500.png 243w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1584989693-156x320.png 156w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1584989693.png 1080w\" sizes=\"(max-width: 243px) 100vw, 243px\"></a></p>\n<p><em>OPEN ALBUM</em> doesn’t do anything right now. As you progress through the tutorial, you’ll build a completely functional gallery app. </p>\n<h2 id=\"toc-anchor-002\">What Is Scoped Storage?</h2>\n<p>The <em>Storage Access Framework (SAF)</em>, introduced in Android 4.4, made it easy for developers to browse and open files on the device. Intent actions like <code>ACTION_CREATE_DOCUMENT</code>, <code>ACTION_OPEN_DOCUMENT</code> and <code>ACTION_OPEN_DOCUMENT_TREE</code> perform the required operations. </p>\n<p>Although it works, SAF is slow and highly unpopular among the developer community.</p>\n<div class=\"note\">\n<em>Note</em>: Take a look at Android’s <a href=\"https://developer.android.com/guide/topics/providers/document-provider\" rel=\"noopener\" target=\"_blank\">official Storage Access Framework guide</a> to learn more.\n</div>\n<p><em>Scoped storage</em> came on the scene when Android 10 officially launched on September 3, 2019. It changed things a bit. As the name suggests, it provides <i>scoped</i> — or limited — access to the file system. Apps that use scoped storage have access only to their app directory on external storage plus any media the app created.</p>\n<p>Imagine you’re creating a voice recorder app. If you implement scoped storage in your app for Android 10 and above, you’ll have a limited scope for reading and writing files. Since your audio files reside in the app directory, you don’t need permission to access or modify them.</p>\n<h2 id=\"toc-anchor-003\">Why Do You Need Scoped Storage?</h2>\n<p>There are three main reasons for using scoped storage:</p>\n<ol>\n<li>\n<em>Improving security</em>: Developers should have control over the files their apps create. Scoped storage provides this control, letting developers work with files without having to request storage permissions At the same time, scoped storage also provides better app data protection because other apps can’t access these files easily.</li>\n<li>\n<em>Reducing leftover app data</em>: When a user uninstalls an app from their device, some app data still remains in the shared storage. With scoped storage, this problem disappears as all the app data resides exclusively in the app directory.</li>\n<li>\n<em>Limiting the abuse of READ_EXTERNAL_STORAGE permission</em>: Developers have abused this permission heavily because it gave them access to the entire external storage. Using scoped storage, apps can access only their own files, folders and other media file types using storage APIs.</li>\n</ol>\n<p>Even though scoped storage is useful, there may be times when you don’t want to use it. Luckily, you can still opt out of using it in Android 10.</p>\n<h2 id=\"toc-anchor-004\">Implementing Non-Scoped Storage in Android 10</h2>\n<p>An easy way to opt out of scoped storage is to set <code>requestLegacyExternalStorage</code> in your <code>application</code> in <em>AndroidManifest.xml</em> to <code>true</code>.</p>\n<p>This attribute is <code>false</code> by default on apps targeting Android 10 and higher. If you set it to <code>true</code>, it will make an exception for your app, allowing you to use legacy storage solutions. This grants access to different directories and media files without any issues.</p>\n<p>This flag gives developers more time to test their apps before migrating to scoped storage. However, this isn’t recommended because, from Android 11 onwards, this attribute will no longer be available.</p>\n<div class=\"note\">\n<em>Note</em>: You won’t use this option in this tutorial. If you’re eager to see how to set it properly, look at the <a href=\"https://developer.android.com/training/data-storage/compatibility\" rel=\"noopener\" target=\"_blank\">official data storage documentation</a>.</div>\n<p>Now, it’s time to get started with using scoped storage in an actual app.</p>\n<h2 id=\"toc-anchor-005\">Adding the Required Permissions</h2>\n<p>For your first step, you’ll add permissions to let your app access and modify images from other apps.</p>\n<p>Open <em>AndroidManifest.xml</em> and paste the following code just below the <code>TODO</code>:</p>\n<pre lang=\"kotlin\">\r\n&lt;uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" /&gt;\r\n&lt;uses-permission\r\n  android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\r\n  android:maxSdkVersion=\"28\" /&gt;\r\n</pre>\n<p>Here, you use <code>READ_EXTERNAL_STORAGE</code> permission to access images taken by other apps. <code>WRITE_EXTERNAL_STORAGE</code> permission lets you delete these images. You set <code>android:maxSdkVersion</code> to <code>28</code> because in Android 10 and above, you don’t need this permission anymore. </p>\n<p>Later in the tutorial, you’ll explicitly ask the user’s permission to handle image deletion in Android 10.</p>\n<p>Next, open <em>MainActivity.kt</em> and add the following permissions inside <code>requestPermissions()</code>:</p>\n<pre lang=\"kotlin\">\r\nif (!haveStoragePermission()) {\r\n  val permissions = arrayOf(\r\n      Manifest.permission.READ_EXTERNAL_STORAGE,\r\n      Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n  )\r\n  ActivityCompat.requestPermissions(\r\n      //1\r\n      this,\r\n      //2\r\n      permissions,\r\n      //3\r\n      READ_EXTERNAL_STORAGE_REQUEST\r\n  )\r\n}\r\n</pre>\n<p>The code above requests <em>runtime permissions</em>, which are mandatory from Android 6.0 and higher. </p>\n<p><code>requestPermissions()</code> — from the support library — takes three parameters:</p>\n<ol>\n<li>The reference of the <code>Activity</code> requesting permissions.</li>\n<li>A string array of the required permissions.</li>\n<li>The <code>requestCode</code>, which must be unique since <code>onRequestPermissionsResult()</code> uses this same code to handle various user actions.</li>\n</ol>\n<p>Build and run. Now, tap <em>OPEN ALBUM</em>, which shows a dialog asking the user for storage permission: </p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585688884.png\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585688884-243x500.png\" alt=\"Requesting storage permission\" width=\"243\" height=\"500\" class=\"aligncenter bordered size-large wp-image-251689\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585688884-243x500.png 243w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585688884-156x320.png 156w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585688884.png 1080w\" sizes=\"(max-width: 243px) 100vw, 243px\"></a></p>\n<div class=\"note\">\n<em>Note</em>: The dialog design may change depending on the Android version you’re using. You’ll see a dialog like the one shown above on an Android 10 device or emulator.\n</div>\n<p>Tap <em>Deny</em> and the app will show the rationale for the permission.</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585688907.png\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585688907-243x500.png\" alt=\"Deny permission screen\" width=\"243\" height=\"500\" class=\"aligncenter bordered size-large wp-image-251691\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585688907-243x500.png 243w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585688907-156x320.png 156w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585688907.png 1080w\" sizes=\"(max-width: 243px) 100vw, 243px\"></a></p>\n<p>Now, when you tap <em>GRANT PERMISSION</em> and then tap <em>Allow</em>, it will show an empty screen as below:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585689009.png\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585689009-243x500.png\" alt=\"Empty images screen\" width=\"243\" height=\"500\" class=\"aligncenter bordered size-large wp-image-251692\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585689009-243x500.png 243w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585689009-156x320.png 156w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585689009.png 1080w\" sizes=\"(max-width: 243px) 100vw, 243px\"></a></p>\n<p>The screen is empty because it doesn’t contain any images yet. You’ll add them next!</p>\n<h2 id=\"toc-anchor-006\">Fetching Images Using MediaStore</h2>\n<p>Open <em>MainActivityViewModel.kt</em> and add the following inside <code>queryImages()</code>, just after the <code>// TODO</code> comment.</p>\n<pre lang=\"kotlin\">\r\n// 1\r\nval projection = arrayOf(\r\n    MediaStore.Images.Media._ID,\r\n    MediaStore.Images.Media.DISPLAY_NAME,\r\n    MediaStore.Images.Media.DATE_TAKEN\r\n)\r\n// 2\r\nval selection = \"${MediaStore.Images.Media.DATE_TAKEN} &gt;= ?\"\r\n// 3\r\nval selectionArgs = arrayOf(\r\n    dateToTimestamp(day = 1, month = 1, year = 2020).toString()\r\n)\r\n// 4\r\nval sortOrder = \"${MediaStore.Images.Media.DATE_TAKEN} DESC\"\r\n// 5\r\ngetApplication&lt;Application&gt;().contentResolver.query(\r\n    MediaStore.Images.Media.EXTERNAL_CONTENT_URI,\r\n    projection,\r\n    selection,\r\n    selectionArgs,\r\n    sortOrder\r\n)?.use { cursor -&gt;\r\n  imageList = addImagesFromCursor(cursor)\r\n}\r\n</pre>\n<p>Add any missing imports by pressing <em>Option-Enter</em> on Mac or <em>Alt-Enter</em> on PC.</p>\n<p>Here’s a step-by-step breakdown:</p>\n<ol>\n<li>\n<em>projection</em>: An array that contains all the information you need. It’s similar to the <em>SELECT</em> clause of an SQL statement.</li>\n<li>\n<em>selection</em>: Similar to the <em>WHERE</em> clause in SQL, this lets you specify any condition. The <code>?</code> in the statement is a placeholder that will get its value from <code>selectionArgs</code>.</li>\n<li>\n<em>selectionArgs</em>: An array containing the value that will replace <code>?</code> in the statement stored in <code>selection</code>. In this case, you’re requesting all the images from this year. <code>dateToTimestamp()</code> is a utility function that accepts a day, a month and a year. It returns the corresponding timestamp value, which <code>selectionArgs</code> requires.</li>\n<li>\n<em>sortOrder</em>: As the name suggests, this contains the order to return the images. The default order is ascending, but here you add the <em>DESC</em> keyword after the variable name to switch to descending order.</li>\n<li>\n<em>query()</em>: A method of <code>ContentResolver</code> that takes in all the above as parameters as well as an additional <code>Uri</code> parameter that maps to the required table in the provider. In this case, the required <code>Uri</code> is <code>EXTERNAL_CONTENT_URI</code> since you are requesting images from outside the app. <code>Uri</code> is always mandatory. Hence, it is a non-nullable parameter while the rest of the parameters are nullable.</li>\n</ol>\n<p>Phew! That was a lot to take in. Keep it up. </p>\n<p>Build and run to see what you’ve achieved so far. Assuming you granted the permission earlier, you’ll now see some photos instead of the blank screen:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585691221.png\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585691221-243x500.png\" alt=\"Showing images\" width=\"243\" height=\"500\" class=\"aligncenter bordered size-large wp-image-251703\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585691221-243x500.png 243w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585691221-156x320.png 156w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585691221.png 1080w\" sizes=\"(max-width: 243px) 100vw, 243px\"></a></p>\n<p>The images will be different on your device. If you haven’t taken a picture in the year 2020, then the screen will still be blank. In that case, go ahead and take a selfie with your cat or dog! When you open the app again, you’ll see your picture there. Tap any image in the grid and it will show a delete dialog.</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585691236.png\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585691236-243x500.png\" alt=\"Delete dialog\" width=\"243\" height=\"500\" class=\"aligncenter bordered size-large wp-image-251705\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585691236-243x500.png 243w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585691236-156x320.png 156w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585691236.png 1080w\" sizes=\"(max-width: 243px) 100vw, 243px\"></a></p>\n<p>Tapping the <em>DELETE</em> button won’t do anything yet. Get ready to delete an image!</p>\n<h2 id=\"toc-anchor-007\">Deleting an Image From MediaStore</h2>\n<p>Jump to <code>performDeleteImage()</code> inside <em>MainActivityViewModel.kt</em> and add the following code:</p>\n<pre lang=\"kotlin\">\r\ntry {\r\n  // 1\r\n  getApplication&lt;Application&gt;().contentResolver.delete(\r\n      image.contentUri,\"${MediaStore.Images.Media._ID} = ?\",\r\n      arrayOf(image.id.toString())\r\n  )\r\n} \r\n// 2\r\ncatch (securityException: SecurityException) {\r\n  if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.Q) {\r\n    val recoverableSecurityException =\r\n        securityException as? RecoverableSecurityException\r\n            ?: throw securityException\r\n        pendingDeleteImage = image\r\n        _permissionNeededForDelete.postValue(\r\n              recoverableSecurityException.userAction.actionIntent.intentSender\r\n        )\r\n  } else {\r\n    throw securityException\r\n  }\r\n}\r\n</pre>\n<p>Add any missing imports by pressing <em>Option-Enter</em> on Mac or <em>Alt-Enter</em> on PC.</p>\n<p>There are a few important things you should know about this block of code:</p>\n<ol>\n<li>Here, you call <code>contentResolver.delete()</code> inside a <code>try</code> block since this method can throw a <code>SecurityException</code> at runtime. The method requires the <code>ContentUri</code> of the image you want to delete. In the <code>where</code> parameter, you specify that you want to delete an image based on its <code>_ID</code>. In the final parameter, you pass the string version of the <code>_ID</code> in an array.</li>\n<li>In Android 10 and above, it isn’t possible to delete or modify items from <code>MediaStore</code> directly. You need permission for these actions. The correct approach is to first catch <code>RecoverableSecurityException</code>, which contains an <code>intentSender</code> that can prompt the user to grant permission. You pass <code>intentSender</code> to the activity by calling <code>postValue()</code> on your <code>MutableLiveData</code>.</li>\n</ol>\n<div class=\"note\">\n<em>Note</em>: You can learn more about <code>MutableLiveData</code> and <code>postValue()</code> from Android’s <a href=\"https://developer.android.com/reference/androidx/lifecycle/MutableLiveData\" rel=\"noopener\" target=\"_blank\">MutableLiveData documentation</a>.\n</div>\n<p>Now, go to <em>MainActivity.kt</em> and add the following code to <code>viewModel.permissionNeededForDelete.observe()</code>, just after the <code>// TODO</code> comment.</p>\n<pre lang=\"kotlin\">\r\nintentSender?.let {\r\n  startIntentSenderForResult(\r\n      intentSender,\r\n      DELETE_PERMISSION_REQUEST,\r\n      null,\r\n      0,\r\n      0,\r\n      0,\r\n      null\r\n  )\r\n}\r\n</pre>\n<p><code>startIntentSenderForResult()</code> launches <code>intentSender</code>, which you passed to it. <code>DELETE_PERMISSION_REQUEST</code> is a unique <em>request code</em> used to identify and handle the action when the request completes.</p>\n<p>Before you try the new delete feature, Scopeo needs a few more finishing touches!</p>\n<h2 id=\"toc-anchor-008\">Listening for Changes With ContentObserver</h2>\n<p><code>ContentObserver</code> is a class that listens for changes whenever the data in the content provider changes. Since data will change whenever you delete any image in the app, you need to use a <code>ContentObserver</code>.</p>\n<h3 id=\"toc-anchor-009\">Registering the ContentObserver</h3>\n<p>Start by registering the <code>ContentObserver</code>.</p>\n<p>Open <em>MainActivityViewModel.kt</em> and add the following code inside <code>loadImages()</code>, just after the <code>// TODO</code> comment.</p>\n<pre lang=\"kotlin\">\r\ncontentObserver = getApplication&lt;Application&gt;().contentResolver.registerObserver(\r\n  MediaStore.Images.Media.EXTERNAL_CONTENT_URI\r\n) {\r\n  loadImages()\r\n}\r\n</pre>\n<p>The code above just calls the extension method <code>ContentResolver.registerObserver(uri: Uri, observer: (selfChange: Boolean) -&gt; Unit)</code>, which is already implemented as shown below:</p>\n<pre lang=\"kotlin\">\r\n/**\r\n * Extension method to register a [ContentObserver]\r\n */\r\nprivate fun ContentResolver.registerObserver(\r\n    uri: Uri,\r\n    observer: (selfChange: Boolean) -&gt; Unit\r\n): ContentObserver {\r\n  // 1\r\n  val contentObserver = object : ContentObserver(Handler()) {\r\n    override fun onChange(selfChange: Boolean) {\r\n      observer(selfChange)\r\n    }\r\n  }\r\n  // 2\r\n  registerContentObserver(uri, true, contentObserver)\r\n  return contentObserver\r\n}\r\n</pre>\n<p>Look closely at the code, and you’ll notice two things are happening:</p>\n<ol>\n<li>\n<code>contentObserver</code> overrides <code>onChange()</code>. This method defines what happens if the data in the provider changes. In this case, it will call <code>loadImages()</code> passed as a lambda. A best practice is to always use a <code>Handler()</code> when creating <code>ContentObserver</code>.</li>\n<li>Next, the extension method registers the <code>ContentObserver</code> using the <code>uri</code> passed to it. The second parameter passed as <code>true</code> indicates that all the other descendant URIs, starting with the given URI, should trigger the method call. The final parameter is the instance of the <code>ContentObserver</code> you created earlier.</li>\n</ol>\n<p>Now that you’ve learned how to register the <code>ContentObserver</code>, take a moment to find out how and why to unregister it again.</p>\n<h3 id=\"toc-anchor-010\">Unregistering the ContentObserver</h3>\n<p>Being a good Android citizen, you should also unregister your <code>ContentObserser</code> to prevent memory leaks. Add the following code to <code>onCleared()</code> inside <em>MainActivityViewModel.kt</em>.</p>\n<pre lang=\"kotlin\">\r\ncontentObserver?.let {\r\n  getApplication&lt;Application&gt;().contentResolver.unregisterContentObserver(it)\r\n}\r\n</pre>\n<p>This code just calls <code>unregisterContentObserver()</code> of the <code>ContentResolver</code>. <code>ViewModel</code> calls <code>onCleared()</code> when it’s not used anymore, so it’s the perfect place to unregister.</p>\n<p>Well, it’s finally done! Go ahead and run your app to check out the delete feature. If you try deleting an image on an Android 10 device, it will now ask for permission:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585771828-1.png\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585771828-1-243x500.png\" alt=\"Deletion permission in Android 10\" width=\"243\" height=\"500\" class=\"aligncenter size-large bordered wp-image-251723\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585771828-1-243x500.png 243w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585771828-1-156x320.png 156w, https://koenig-media.raywenderlich.com/uploads/2020/04/Screenshot_1585771828-1.png 1080w\" sizes=\"(max-width: 243px) 100vw, 243px\"></a></p>\n<p>The dialog won’t show on devices running older versions of Android since scoped storage is only available on devices running Android 10 or above.</p>\n<p>If you deny permission, nothing happens. But if you grant permission, you’ll delete the image permanently and the app will load the updated list. </p>\n<h2 id=\"toc-anchor-011\">Where to Go From Here?</h2>\n<p>Download the completed project files by clicking the <em>Download Materials</em> button at the top or bottom of the tutorial.</p>\n<p>In this tutorial, you learned about scoped storage and worked on the most popular use case where it applies. If you want to learn about other use cases, check out this video from <a href=\"https://www.youtube.com/watch?v=UnJ3amzJM94\" rel=\"noopener\" target=\"_blank\">Android Developers Summit 2019</a>.  </p>\n<p>This is a great time to get your apps working with scoped storage as it will be mandatory for all new apps in August 2020 and every app targeting Android 11. </p>\n<p>Many new scoped storage changes will come into effect with Android 11. Check them out here: <a href=\"https://developer.android.com/preview/privacy/storage\" rel=\"noopener\" target=\"_blank\">Storage Updates in Android 11</a>. </p>\n<p>Also, take a look at <a href=\"https://www.raywenderlich.com/6901838-data-privacy-for-android\" rel=\"noopener\" target=\"_blank\">Data Privacy for Android</a> to learn more about user privacy and security.</p>\n<p>I hope you liked this tutorial. If you have any questions or comments, please join the forum discussion below.</p>\n\n"
      }
    },
    {
        "id": "10628623",
        "type": "contents",
        "attributes": {
          "uri": "rw://koenig/post/255285",
          "name": "Mac Catalyst with Andy Pereira – Podcast S10 E7",
          "description": "Dru flips the switch on his 50th show with Andy Pereira telling us how easy Catalyst can be. After Dru talks about transitioning from developer to architect. \n",
          "released_at": "2020-05-20T18:01:43.000Z",
          "free": true,
          "difficulty": "intermediate",
          "content_type": "article",
          "duration": 60,
          "popularity": 8918,
          "technology_triple_string": "Swift 5, iOS 13, Xcode 11",
          "contributor_string": "Dru Freeman",
          "ordinal": null,
          "professional": false,
          "description_plain_text": "Dru flips the switch on his 50th show with Andy Pereira telling us how easy Catalyst can be. After Dru talks about transitioning from developer to architect. \n",
          "video_identifier": null,
          "parent_name": null,
          "accessible": true,
          "card_artwork_url": "https://koenig-media.raywenderlich.com/uploads/2016/02/Logo.png",
          "body": "\n\n<p>Dru flips the switch on his 50th show with Andy Pereira telling us how easy Catalyst can be. After Dru talks about transitioning from developer to architect.<br>\n</p>\n<div class=\"powerpress_player\" id=\"powerpress_player_25\">\n<!--[if lt IE 9]><script>document.createElement('audio');</script><![endif]-->\n<audio class=\"wp-audio-shortcode\" id=\"audio-255285-1\" preload=\"none\" style=\"width: 100%;\" controls=\"controls\"><source type=\"audio/mpeg\" src=\"https://media.blubrry.com/raywenderlich/p/content.blubrry.com/raywenderlich/S10E07-Catalyst_AndyPereira.mp3?_=1\"></source><a href=\"https://media.blubrry.com/raywenderlich/p/content.blubrry.com/raywenderlich/S10E07-Catalyst_AndyPereira.mp3\">https://media.blubrry.com/raywenderlich/p/content.blubrry.com/raywenderlich/S10E07-Catalyst_AndyPereira.mp3</a></audio>\n</div>\n<p class=\"powerpress_links powerpress_links_mp3\">Podcast: <a href=\"https://media.blubrry.com/raywenderlich/p/content.blubrry.com/raywenderlich/S10E07-Catalyst_AndyPereira.mp3\" class=\"powerpress_link_pinw\" target=\"_blank\" title=\"Play in new window\" onclick=\"return powerpress_pinw('https://www.raywenderlich.com/?powerpress_pinw=255285-podcast');\" rel=\"nofollow\">Play in new window</a> | <a href=\"https://media.blubrry.com/raywenderlich/s/content.blubrry.com/raywenderlich/S10E07-Catalyst_AndyPereira.mp3\" class=\"powerpress_link_d\" title=\"Download\" rel=\"nofollow\" download=\"S10E07-Catalyst_AndyPereira.mp3\">Download</a></p>\n<p class=\"powerpress_links powerpress_subscribe_links\">Subscribe: <a href=\"https://subscribeonandroid.com/www.raywenderlich.com/feed/podcast\" class=\"powerpress_link_subscribe powerpress_link_subscribe_android\" title=\"Subscribe on Android\" rel=\"nofollow\">Android</a> | <a href=\"https://www.raywenderlich.com/feed/podcast\" class=\"powerpress_link_subscribe powerpress_link_subscribe_rss\" title=\"Subscribe via RSS\" rel=\"nofollow\">RSS</a></p>\n<p>[<a href=\"https://itunes.apple.com/us/podcast/raywenderlich.com-podcast/id773910890\">Subscribe in iTunes</a>] [<a href=\"https://open.spotify.com/show/7FoclmfzgcWDDMSwpNurUi\">Listen in Spotify</a>] [<a href=\"https://www.raywenderlich.com/feed/podcast\">RSS Feed</a>]</p>\n<p>Interested in sponsoring a podcast episode? Email <a href=\"mailto:chuck@devchat.tv\">here</a> to find out how!</p>\n<h2 id=\"toc-anchor-001\">Episode Links</h2>\n<h3 id=\"toc-anchor-002\">Catalyst: Mac development from iOS</h3>\n<ul>\n<li>\n<a href=\"https://store.raywenderlich.com/products/catalyst-by-tutorials\">Catalyst by Tutorials</a> Book – RayWenderlich.com</li>\n<li>\n<a href=\"https://www.raywenderlich.com/5037284-catalyst-tutorial-running-ipad-apps-on-macos\">Catalyst Tutorial: Running iPad apps on macOS</a>  – RayWenderlich.com</li>\n<li>\n<a href=\"https://developer.apple.com/mac-catalyst/\">Bring Your iPad App to Mac</a> Article – Apple Developer Site</li>\n<li>\n<a href=\"https://developer.apple.com/documentation/uikit/mac_catalyst\">Catalyst Documentation</a> – Apple Developer Site</li>\n<li>\n<a href=\"https://developer.apple.com/design/human-interface-guidelines/ios/overview/mac-catalyst/\">Mac Catalyst HIG</a>  – Apple Developer Site</li>\n<li>\n<a href=\"https://developer.apple.com/videos/play/wwdc2019/205/\">205 – Introducing iPad Apps for Mac</a>  – WWDC 2019</li>\n<li>\n<a href=\"https://developer.apple.com/videos/play/wwdc2019/235/\">235 – Taking iPad Apps for Mac to the Next Level</a>  – WWDC 2019</li>\n<li>\n<a href=\"https://developer.apple.com/videos/play/wwdc2019/809/\">809 – Designing iPad Apps for Mac</a>  – WWDC 2019</li>\n<li>\n<a href=\"https://www.ebay.com/itm/ERIC-CLAPTON-IS-GOD-CREAM-THE-YARDBIRDS-GRAFFITI-DOG-PHOTO-POSTER-PRINT-REPRINT-/281205053465\">Clapton is God</a> Poster – Ebay</li>\n</ul>\n<h2 id=\"toc-anchor-003\">Contact Us</h2>\n<ul>\n<li><a href=\"https://twitter.com/PodCastDru\">Dru Freeman on Twitter</a></li>\n<li><a href=\"https://twitter.com/alexsullivan444\">Alex Sullivan on Twitter</a></li>\n<li><a href=\"https://twitter.com/macandyp\">Andy Pereira on Twitter</a></li>\n<li><a href=\"mailto:podcast@raywenderlich.com\">Email the Podcast Team</a></li>\n</ul>\n<h2 id=\"toc-anchor-004\">Where To Go From Here?</h2>\n<p>We hope you enjoyed this episode of our podcast. Be sure to <a href=\"https://itunes.apple.com/us/podcast/raywenderlich.com-podcast/id773910890\">subscribe in iTunes</a> or in <a href=\"https://open.spotify.com/show/7FoclmfzgcWDDMSwpNurUi\">Spotify</a> to get notified when the next episode comes out.</p>\n<p>We’d love to hear what you think about the podcast, and any suggestions on what you’d like to hear in future episodes. Feel free to drop a comment here, or email us anytime at <a href=\"mailto:podcast@raywenderlich.com\">podcast@raywenderlich.com</a>.</p>\n\n"
        }
    },
    {
        "id": "10269094",
        "type": "contents",
        "attributes": {
          "uri": "rw://koenig/post/253539",
          "name": "Announcing Our Learn At Home Sale!",
          "description": "Save big with limited-time Advanced iOS and Android book bundles, plus 50% off every book in our store!\n",
          "released_at": "2020-05-19T16:59:24.000Z",
          "free": true,
          "difficulty": null,
          "content_type": "article",
          "duration": 1800,
          "popularity": 12498,
          "technology_triple_string": "",
          "contributor_string": "Tiffani Randolph",
          "ordinal": null,
          "professional": false,
          "description_plain_text": "Save big with limited-time Advanced iOS and Android book bundles, plus 50% off every book in our store!\n",
          "video_identifier": null,
          "parent_name": null,
          "accessible": true,
          "card_artwork_url": "https://koenig-media.raywenderlich.com/uploads/2020/05/learn-at-home-feature.png",
          "body": "\n\n<p>A few weeks ago, we introduced <a href=\"https://www.raywenderlich.com/10277414-rw-community-care\" rel=\"noopener\" target=\"_blank\">RW Community Care</a> – a three-month series of office hours, livestreams, bootcamps, and more, designed to help the mobile development community stay connected and to keep learning — even while a lot of us who are used to the office lifestyle are now working at home.</p>\n<p><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/community-care@2x-32e4a9ed8264eca9080698d680f62e0aa1dca29449b4f38ad6d7771b546e034a-468x320.png\" alt=\"\" width=\"468\" height=\"320\" class=\"aligncenter size-medium wp-image-255272\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/community-care@2x-32e4a9ed8264eca9080698d680f62e0aa1dca29449b4f38ad6d7771b546e034a-468x320.png 468w, https://koenig-media.raywenderlich.com/uploads/2020/05/community-care@2x-32e4a9ed8264eca9080698d680f62e0aa1dca29449b4f38ad6d7771b546e034a-650x445.png 650w, https://koenig-media.raywenderlich.com/uploads/2020/05/community-care@2x-32e4a9ed8264eca9080698d680f62e0aa1dca29449b4f38ad6d7771b546e034a.png 1383w\" sizes=\"(max-width: 468px) 100vw, 468px\"></p>\n<p>As an extension of that, we’re excited to introduce the raywenderlich.com <em>Learn At Home</em> sale, to help you continue learning for less, no matter what mobile platform you’re into. </p>\n<h2 id=\"toc-anchor-001\">What Is the Learn At Home Sale?</h2>\n<p>The Learn At Home Sale gives you:</p>\n<ul>\n<li>\n<em>50% off all books in our online store</em> (yes, every single book) 🎉</li>\n<li>\n<em>Advanced iOS &amp; Swift and Advanced Android &amp; Kotlin book bundles for just $99.99</em> to help you stay at the top of your game 🎉</li>\n<li>\n<em>Plus</em> we have a host of winners from our Learn at Home Bundle giveaway — read on to see who the lucky winners are!</li>\n</ul>\n<p>Keep reading to get all of the details on the 50% off book sale, the iOS and Android bundles, and how you can win a bundle for yourself!</p>\n<h2 id=\"toc-anchor-002\">50% Off All Books</h2>\n<p>To help you build your development skills and save a little of your hard-earned money, <a href=\"https://store.raywenderlich.com/\">all of the books in our online store are now on sale for 50% off</a>!</p>\n<p>Maybe you’re looking to get started with developing for in iOS or Android; perhaps you’re looking to level up your skills with mobile architecture, testing, or reactive programming; or it could be you’re looking to sharpen your skills for whiteboard interviews or other ways to grow your career in the industry.</p>\n<p>Whatever your needs, we’ve got you covered. And now you can build your library for less, with 50% off each and every book in our online store.</p>\n<div id=\"attachment_255271\" style=\"width: 417px\" class=\"wp-caption aligncenter\">\n<a href=\"http://store.raywenderlich.com\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/c6271683-3a62-415a-9828-712009d95ff8-407x320.png\" alt=\"\" width=\"407\" height=\"320\" class=\"size-medium wp-image-255271\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/c6271683-3a62-415a-9828-712009d95ff8-407x320.png 407w, https://koenig-media.raywenderlich.com/uploads/2020/05/c6271683-3a62-415a-9828-712009d95ff8-636x500.png 636w, https://koenig-media.raywenderlich.com/uploads/2020/05/c6271683-3a62-415a-9828-712009d95ff8.png 1386w\" sizes=\"(max-width: 407px) 100vw, 407px\"></a><p class=\"wp-caption-text\">All books in our online store are now 50% off!</p>\n</div>\n<p>And don’t forget, any future updates to existing books are free for digital edition customers. It’s a small way to thank you for being a supporter our books.</p>\n<h2 id=\"toc-anchor-003\">iOS &amp; Swift and Android &amp; Kotlin Book Bundles</h2>\n<p>We’re pleased to announce two great advanced book bundles, perfect for the mobile developer who wants to keep their skills sharp in this ever-changing industry. All bundles include brand-new books, as well as our most popular books covering advanced iOS and Android skills!</p>\n<h3 id=\"toc-anchor-004\">Learn At Home Book Bundle</h3>\n<p>Our <a href=\"https://store.raywenderlich.com/products/advanced-ios-and-swift-learn-at-home-bundle-2020\">Advanced iOS &amp; Swift Learn At Home bundle</a> is designed for the advanced iOS developer who already knows the basics and is looking to stay at the top of their game.</p>\n<p>This book bundle includes three, brand-new books, along with our top two books for advanced iOS developers:</p>\n<p><a href=\"https://store.raywenderlich.com/products/advanced-ios-and-swift-learn-at-home-bundle-2020\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-advanced-swift-learn-at-home@2x-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-254995\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-advanced-swift-learn-at-home@2x-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-advanced-swift-learn-at-home@2x-650x500.png 650w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a></p>\n<ol>\n<li>\n<em>Auto Layout by Tutorials</em>, First Edition <em>(new!)</em>\n</li>\n<li>\n<em>App Design Apprentice</em>, First Edition <em>(pre-order!)</em>\n</li>\n<li>\n<em>Apple Augmented Reality by Tutorials</em>, First Edition <em>(new!)</em>\n</li>\n<li>\n<em>Machine Learning by Tutorials</em>, Second Edition <em>(updated chapters!)</em>\n</li>\n<li>\n<em>Mastering Git</em> First Edition <em>(new chapters!)</em>\n</li>\n</ol>\n<p>The cost to buy these books separately is $279.95, but you can <a href=\"https://store.raywenderlich.com/products/advanced-ios-and-swift-learn-at-home-bundle-2020\">get all five advanced iOS books for just $99.99</a>. (That’s 64% off — you save over $150!).</p>\n<p>If you’re serious about growing your career as an iOS developer, or you are thinking about moving from another platform to iOS, there’s no better way to position yourself as an expert in the iOS field.</p>\n<h2 id=\"toc-anchor-005\">Advanced Android &amp; Kotlin Learn At Home Bundle</h2>\n<p>Our <a href=\"https://store.raywenderlich.com/products/advanced-android-learn-at-home-bundle-2020\">Advanced Android &amp; Kotlin Learn At Home bundle</a> has five books designed to grow your skills as an advanced Android developer:</p>\n<p><a href=\"https://store.raywenderlich.com/products/advanced-android-learn-at-home-bundle-2020\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-advanced-android-learn-at-home@2x-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-254993\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-advanced-android-learn-at-home@2x-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-advanced-android-learn-at-home@2x-650x500.png 650w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a></p>\n<ol>\n<li>\n<em>App Design Apprentice</em>, First Edition <em>(pre-order!)</em>\n</li>\n<li>\n<em>Mastering Git</em>, First Edition <em>(new chapters!)</em>\n</li>\n<li>\n<em>Advanced Android App Architecture</em>, First Edition</li>\n<li>\n<em>Kotlin Coroutines by Tutorials</em>, First Edition</li>\n<li>\n<em>Reactive Programming with Kotlin</em>, First Edition</li>\n</ol>\n<p>The cost to buy these books separately is $279.95, but you can <a href=\"https://store.raywenderlich.com/products/advanced-android-learn-at-home-bundle-2020\">get all five advanced Android books for just $99.99.</a> (That’s 64% off and over $150 in savings!)</p>\n<p>The Android and Kotlin world moves fast, and you don’t want to get left behind. There’s no better time to grow your library — and your career — with the advanced Android &amp; Kotlin Learn At Home bundle. </p>\n<h2 id=\"toc-anchor-006\">Introducing Our New Books</h2>\n<p>Although we may have spilled the beans above when talking about the bundles, we’re excited to announce <em>three brand new surprise books</em> as part of our Learn At Home Sale this year!</p>\n<h3 id=\"toc-anchor-007\">New Book — Auto Layout by Tutorials</h3>\n<p>Our first new book is <em>Auto Layout by Tutorials</em> and it’s 100% complete and available today!</p>\n<p><a href=\"https://store.raywenderlich.com/products/auto-layout-by-tutorials\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-auto-layout-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-254997\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-auto-layout-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-auto-layout-650x500.png 650w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-auto-layout.png 1386w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a></p>\n<p>While it may seem daunting at first, Auto Layout is an elegant solution to making your user interfaces flexible and adaptable without thousands of lines of code that are both difficult to understand and troublesome to maintain. </p>\n<p>This book will be your guide as you explore and master the many capabilities Auto Layout provides.</p>\n<p>What’s inside <a href=\"https://store.raywenderlich.com/products/auto-layout-by-tutorials\">Auto Layout by Tutorials:</a></p>\n<ul>\n<li>\n<em>Interface Builder:</em> Learn to use Interface Builder to construct and maintain your user interfaces.</li>\n<li>\n<em>Stack Views &amp; Scroll Views:</em> Learn how these special view types interact with Auto Layout and how best to utilize them in your apps.</li>\n<li>\n<em>Self-Sizing Views:</em> Discover how to make your user interface dynamically adapt to its content.\n</li>\n<li>\n<em>Animating Constraints:</em> See how to animate your Auto Layout constraints to provide feedback, focus user attention and improve navigation.</li>\n<li>\n<em>Adaptive Layout:</em> Learn to use Auto Layout to make adjustments for screen size, orientation, Dynamic Type size and more.</li>\n<li>\n<em>Resolving Common Issues:</em> Discover how to investigate when things go awry and learn how to resolve Auto Layout conflicts.</li>\n</ul>\n<p>After reading this book, you’ll be prepared to harness the full power of Auto Layout in all of your apps!</p>\n<p>This book is <a href=\"https://store.raywenderlich.com/products/auto-layout-by-tutorials\">100% complete and available now.</a> And it’s on sale for just $29.99 — that’s 50% off!</p>\n<p><em>About the Authors</em></p>\n<p class=\"l-image-float-left\">\n<img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/Jayven-Nhan-320x320.jpg\" alt=\"\" width=\"200\" class=\"alignleft size-medium wp-image-254925 bordered\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/Jayven-Nhan-320x320.jpg 320w, https://koenig-media.raywenderlich.com/uploads/2020/05/Jayven-Nhan-250x250.jpg 250w, https://koenig-media.raywenderlich.com/uploads/2020/05/Jayven-Nhan.jpg 480w\" sizes=\"(max-width: 320px) 100vw, 320px\">\n</p>\n<p><em>Jayven Nhan</em> is an author of this book. He is an Apple scholar who contributes his best work to passion, fitness training, and nutrition. Passion makes problem-solving an enjoyment. Fitness training keeps him from staring at his Macbook, unrequited love. Nutrition gives him the epic energy he needs to power his day. He enjoys meeting passionate developers from all around the world. Outside of coding, you may find him listening to audiobooks and podcasts, reading, or watching YouTube videos.</p>\n<p class=\"l-image-float-left\">\n<img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/Libranner-Santos-399x320.jpg\" alt=\"\" width=\"200\" class=\"alignleft size-medium wp-image-254926 bordered\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/Libranner-Santos-399x320.jpg 399w, https://koenig-media.raywenderlich.com/uploads/2020/05/Libranner-Santos-624x500.jpg 624w\" sizes=\"(max-width: 399px) 100vw, 399px\">\n</p>\n<p><em>Libranner Santos</em> is an author of this book. He is a Software Engineer, with a passion for teaching at all levels and always eager to learn new things. Over the last few years, he has worked with many companies all over the world as a mobile developer. He’s the co-founder of saestech.com. When he’s not programming, you can probably find him at the basketball court, dancing salsa or reading a book.</p>\n<h3 id=\"toc-anchor-008\">New Book — Apple Augmented Reality by Tutorials</h3>\n<p>Our second brand new surprise release is <em>Apple Augmented Reality by Tutorials!</em></p>\n<p><a href=\"https://store.raywenderlich.com/products/apple-augmented-reality-by-tutorials\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-apple-augmented-reality@2x-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-254998\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-apple-augmented-reality@2x-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-apple-augmented-reality@2x-650x500.png 650w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a></p>\n<p>This book is the easiest and fastest way to get hands-on experience using Apple AR frameworks and technologies like Reality Composer, RealityKit, and ARKit.</p>\n<p>Augmented reality is going to be the next big thing — there’s absolutely no doubt about it. If you want to build realistic and immersive AR experiences for the Apple platform, this book is your golden ticket.</p>\n<p>Our older book, ARKit by Tutorials, is a collection of ARKit-specific projects for creating various real-world AR experiences. It’s also important to point out that, in that book, there’s a focus around SceneKit as the primary rendering technology.</p>\n<p>Apple Augmented Reality by Tutorials was developed after Apple announced RealityKit and Reality Composer. Instead of just focusing on one rendering technology, the book focuses on all the available rendering technologies Apple has to offer. This not only includes the new RealityKit, but also SceneKit and SpriteKit too. The book includes a collection of fresh new projects for creating various real-world AR experiences.</p>\n<p>This book is a successor to ARKit by Tutorials, not an update to that book. Apple Augmented Reality by Tutorials provides the readers with a single, unified path to all of Apple’s available AR technologies that includes ARKit, RealitKit and Reality Composer.</p>\n<p>Topics covered in <a href=\"https://store.raywenderlich.com/products/apple-augmented-reality-by-tutorials\">Apple Augmented Reality by Tutorials:</a></p>\n<ul>\n<li>\n<em>AR Quick Look:</em> Discover how to integrate AR Quick Look into your apps to give them some cool AR superpowers.</li>\n<li>\n<em>Reality Composer &amp; Reality Files:</em> Find out how to leverage the power of Reality Composer to create interactive AR-based experiences.</li>\n<li>\n<em>Reality Converter &amp; PBR Materials:</em> Discover how PBR materials can add a level of realism to your AR objects, and how you can use Reality Converter to convert, view and customize USDZ content.</li>\n<li>\n<em>RealityKit:</em> Find out how to set up and use RealityKit to build a face-based augmented reality app.\n</li>\n<li>\n<em>Facial Blend Shapes:</em> Build a fully interactive augmented reality face mask that reacts to your facial expressions using blend shapes.</li>\n<li>\n<em>ARKit:</em> Get a complete introduction to ARKit, Apple’s framework for creating fully interactive augmented reality, and learn about the different types of rendering options available with ARKit.</li>\n<li>\n<em>Raycasting &amp; Physics:</em> Learn about raycasting, 2D hit-testing and the SpriteKit physics engine as you add more features and functionality to your game.</li>\n<li>\n<em>ECS &amp; Collaborative Experiences:</em> Build a collaborative AR experience and learn how to create and manage a multipeer connection.</li>\n</ul>\n<p>After reading this book, you’ll have a deep understanding of the technologies and frameworks used to create powerful, immersive AR experiences for the Apple platform.</p>\n<p>This book is <a href=\"https://store.raywenderlich.com/products/apple-augmented-reality-by-tutorials\">available as part of our early access program</a>; when you buy the book now, you’ll receive a free update when the book is available in full! Get it now for just $29.99 — that’s 50% off!</p>\n<p><em>About the Author</em></p>\n<p class=\"l-image-float-left\">\n<img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/Chris-Language-320x320.jpg\" alt=\"\" width=\"200\" class=\"alignleft size-medium wp-image-254928 bordered\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/Chris-Language-320x320.jpg 320w, https://koenig-media.raywenderlich.com/uploads/2020/05/Chris-Language-250x250.jpg 250w, https://koenig-media.raywenderlich.com/uploads/2020/05/Chris-Language-500x500.jpg 500w, https://koenig-media.raywenderlich.com/uploads/2020/05/Chris-Language.jpg 512w\" sizes=\"(max-width: 320px) 100vw, 320px\">\n</p>\n<p><em>Chris Language</em> is the author of this book. Chris is a seasoned coder with 20+ years of experience, and the author of 3D Apple Games by Tutorials. He has fond memories of his childhood and his Commodore 64; more recently he started adding more good memories of life with all his Apple devices. By day, he fights for survival in the corporate jungle of Johannesburg, South Africa. By night he fights demons, dragons and zombies! For relaxation, he codes. You can find him on Twitter <a href=\"https://twitter.com/chrislanguage\">@ChrisLanguage</a> Forever Coder, Artist, Musician, Gamer and Dreamer.</p>\n<h3 id=\"toc-anchor-009\">New Book — App Design Apprentice</h3>\n<p>Our third and final brand-new book is <em>App Design Apprentice</em>!</p>\n<p><a href=\"https://store.raywenderlich.com/products/app-design-apprentice\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-app-design@2x-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-254999\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-app-design@2x-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-app-design@2x-650x500.png 650w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a></p>\n<p>Learn modern app design with Figma! App Design Apprentice guides you through designing modern mobile apps using fundamental design principles.</p>\n<p>If designing better UI and UX for mobile apps sounds difficult and time-consuming, don’t worry, we’ve got you covered.</p>\n<p>Topics covered in <a href=\"https://store.raywenderlich.com/products/app-design-apprentice\">App Design Apprentice:</a></p>\n<ul>\n<li>\n<em>Figma:</em> Learn the basics of a modern design tool.</li>\n<li>\n<em>App Teardowns:</em> Analyze and pick out the best parts of other well-designed apps.</li>\n<li>\n<em>Wireframes:</em> Explore what makes good app user flows.</li>\n<li>\n<em>Reusable Components:</em> Learn to create and use reusable components such as buttons and toolbars.</li>\n<li>\n<em>Typography:</em> Basics for communicating hierarchy, order, and emphasis.</li>\n<li>\n<em>Color:</em> How to create visual styles and palettes.</li>\n<li>\n<em>Transitions &amp; Animations:</em> Create different transitions between screens to communicate relationships.</li>\n<li>\n<em>Design Systems:</em> Best practices for creating good app experience in each ecosystem.</li>\n</ul>\n<p>By the end of this book, you’ll have the knowledge needed to design modern mobile apps that are functional and look good, no matter what platform you’re developing for.</p>\n<p>This book is <a href=\"https://store.raywenderlich.com/products/app-design-apprentice\">available as part of our pre-order program;</a> when you buy the book now, you’ll be the first to receive the free upgrade to the full edition it when it’s completed this Fall!</p>\n<p>Get it now for just $19.99 — that’s 50% off!</p>\n<p><em>About the Author</em></p>\n<p class=\"l-image-float-left\">\n<img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/Rajiv-Patel-408x320.jpg\" alt=\"\" width=\"200\" class=\"alignleft size-medium wp-image-254927 bordered\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/Rajiv-Patel-408x320.jpg 408w, https://koenig-media.raywenderlich.com/uploads/2020/05/Rajiv-Patel-638x500.jpg 638w, https://koenig-media.raywenderlich.com/uploads/2020/05/Rajiv-Patel.jpg 962w\" sizes=\"(max-width: 408px) 100vw, 408px\">\n</p>\n<p><em>Rajiv Patel</em> is the author of this book. He has been designing and developing internet applications since 1999. He started with mobile apps from their earliest days in 2008. He’s particularly focused on emerging technologies and still gets excited about the possibilities of what’s to come. He’s happiest playing with his son and learning new things. Those happen together surprisingly often.</p>\n<h2 id=\"toc-anchor-010\">Updated Books</h2>\n<p>We’ve also been hard at work behind the scenes to bring you some updates on our most popular advanced mobile development books:</p>\n<h3 id=\"toc-anchor-011\">Updated Book — Machine Learning by Tutorials, 2nd ed.</h3>\n<p><a href=\"https://store.raywenderlich.com/products/machine-learning-by-tutorials\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-machine-learning@2x-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-255001\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-machine-learning@2x-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-machine-learning@2x-650x500.png 650w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a></p>\n<p>We’re delighted to share that <em>Machine Learning by Tutorials, Second Edition</em> is now 100% updated!</p>\n<p>Machine learning is one of those topics that can be daunting at first blush. It’s not clear where to start, what path someone should take and what APIs to learn in order to get started teaching machines how to learn.</p>\n<p>This is where this book comes to your rescue! In this book, we’ll hold your hand through a number of tutorials, to get you started in the world of machine learning. We’ll cover a wide range of popular topics in the field of machine learning while developing apps that work on iOS devices.</p>\n<p>We’ve updated three chapters in <a href=\"https://store.raywenderlich.com/products/machine-learning-by-tutorials\">Machine Learning by Tutorials</a>:</p>\n<ul>\n<li>\n<em>[NEW] Natural Language Classification:</em> Learn how to use Apple’s Natural Language framework to handle several useful text-related tasks. You’ll explore this API in the context of a movie review app that supports multiple languages.</li>\n<li>\n<em>[NEW] Natural Language Transformation, Part 1</em> Learn about sequence-to-sequence models and how you can use them to do things like language translation. You’ll build a model with Keras that attempts to translate Spanish-language movie reviews into English.</li>\n<li>\n<em>[NEW] Natural Language Transformation, Part 2</em> This chapter introduces additional techniques you can use to improve the performance of your sequence-to-sequence models.</li>\n</ul>\n<p>By the end of this book, you’ll have a firm understanding of what machine learning is, what it can and cannot do, and how you can use machine learning in your next app!</p>\n<p>Machine Learning by Tutorials, Second Edition is 100% complete and included in our sale <a href=\"https://store.raywenderlich.com/products/machine-learning-by-tutorials\">for just $29.99 (50% off)!</a></p>\n<h3 id=\"toc-anchor-012\">Updated Book — Mastering Git, 1st ed.</h3>\n<p><a href=\"https://store.raywenderlich.com/products/mastering-git\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-mastering-git@2x-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-255002\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-mastering-git@2x-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-mastering-git@2x-650x500.png 650w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a></p>\n<p>Mastering Git has <em>two new chapters!</em></p>\n<p>Chances are if you’re involved with software development you’ve heard of and have used Git at some point in your life. Version control systems are critical for any successful collaborative software project. Git is both simple to start using and accommodating for the most complex tasks with version control. Even seasoned Git users hit roadblocks on how to handle common situations.</p>\n<p>Mastering Git is here to help! This book is the easiest and fastest way to get hands-on experience with using Git for version control of your projects.</p>\n<p>Here’s what’s new in <a href=\"https://store.raywenderlich.com/products/mastering-git\">Mastering Git:</a></p>\n<ul>\n<li>\n<em>[NEW] Centralized Workflow:</em> This model means you work in <code>master</code> all the time. Although this might seem terrifying, it actually works rather well for small teams with infrequent commits.</li>\n<li>\n<em>[NEW] The Many Faces of Undo:</em> One of the common questions associated with git is “how can I get out of this mess?” In this chapter, you’ll learn about the different “undo” commands that Git provides — what they are and when to use them.\n</li>\n</ul>\n<p>One thing you can count on: after reading this book, you’ll be well-prepared to use Git in your own software development workflow!</p>\n<p>This book is <a href=\"https://store.raywenderlich.com/products/mastering-git\">available as part of our early access program;</a> when you buy the book now, you’ll receive a free update when the book is available in full!</p>\n<h3 id=\"toc-anchor-013\">Updated Book — Core Data by Tutorials, 7th ed.</h3>\n<p><a href=\"https://store.raywenderlich.com/products/core-data-by-tutorials\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-core-data@2x-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-255004\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-core-data@2x-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-core-data@2x-650x500.png 650w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a></p>\n<p>Core Data by Tutorials has a <em>brand-new chapter</em> on implementing iCloud-backed data synchronization in your apps!</p>\n<p>Take control of your data in iOS apps using Core Data, through a series of high-quality hands-on tutorials. Start with the basics like setting up your own Core Data Stack all the way to advanced topics like migration, performance, multithreading, and more!</p>\n<p>By the end of this book, you’ll have hands-on experience with Core Data and will be ready to use it in your own apps.</p>\n<p>This edition includes a brand new chapter:</p>\n<ul>\n<li>\n<em>[NEW] NSPersistentCloudKitContainer:</em> Your users may have multiple devices, and they’d love your app to run on them all, and for the data to be shared between them. In this chapter, you will learn how to get iCloud-backed data synchronization (almost) for free using NSPersistentCloudKitContainer.</li>\n</ul>\n<p>Core Data by Tutorials is <a href=\"https://store.raywenderlich.com/products/core-data-by-tutorials\">available now for just $29.99</a> — that’s 50% off!</p>\n<h3 id=\"toc-anchor-014\">Updated Book — Android Apprentice, 3rd ed.</h3>\n<p><a href=\"https://store.raywenderlich.com/products/android-apprentice\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-android-apprentice-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-255008\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-android-apprentice-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-android-apprentice-650x500.png 650w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-android-apprentice.png 1386w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a></p>\n<p>Learning Android programming can be challenging. Sure, there is plenty of documentation, but the tools and libraries available today for Android are easily overwhelming for newcomers to Android and Kotlin.</p>\n<p><em>Android Apprentice</em> takes a different approach to beginning app development. From building a simple first app, all the way to a fully-featured podcast player app, this book walks you step-by-step, building on basic concepts to advanced techniques so you can build amazing apps worthy of the Google Play Store!</p>\n<p>There’s a ton of updates in this book; too numerous to list: this edition of the book includes updates to <em>Android Studio 3, Kotlin 1.3, Android 10, as well as Gradle updates</em>. It also addresses numerous errata provided by you and other readers in the forums.</p>\n<p>During our Learn At Home Sale, you can <a href=\"https://store.raywenderlich.com/products/android-apprentice\">get the Android Apprentice for only $29.99</a> — that’s 50% off!</p>\n<h3 id=\"toc-anchor-015\">Updated Book — iOS Apprentice, 8th ed.</h3>\n<p><a href=\"https://store.raywenderlich.com/products/ios-apprentice\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-ios-apprentice@2x-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-255009\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-ios-apprentice@2x-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-ios-apprentice@2x-650x500.png 650w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a></p>\n<p>In the iOS Apprentice, you will learn how to make your own iPhone and iPad apps, through six engaging, epic-length tutorials. Each new app will be a little more advanced than the one before, and together they cover everything you need to know to make your own apps.</p>\n<p>We’ve <em>restructured the flow of the book</em> to guide the reader through the basics of Swift and iOS development by learning UIKit first, then building toward learning Apple’s more recent SwiftUI as you rebuild the UIKit sample apps, but this time using SwiftUI.</p>\n<p>By the end of the series, you’ll be experienced enough to turn your ideas into real apps that you can sell on the App Store.</p>\n<p>iOS Apprentice is <a href=\"https://store.raywenderlich.com/products/ios-apprentice\">available on sale today for the special sale price of $29.99</a> — that’s 50% off!</p>\n<h2 id=\"toc-anchor-016\">Upcoming Updates for Books</h2>\n<p>We also wanted to give you a “heads up” on some books that we’re in the process of updating, and will be released later this year. If you buy the digital edition of the book now, you’ll automatically get the updated next edition for free!</p>\n<h3 id=\"toc-anchor-017\">Upcoming Updates — Advanced iOS App Architecture</h3>\n<p><a href=\"https://store.raywenderlich.com/products/advanced-ios-app-architecture\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-ios-app-architecture@2x-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-255003\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-ios-app-architecture@2x-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-ios-app-architecture@2x-650x500.png 650w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a>\t </p>\n<p>Our plans for Advanced iOS App Architecture include replacing RxSwift with Combine, and providing other upgrades, throughout the book.</p>\n<p><em>Advanced iOS App Architecture</em> guides you through building one real-world app written in different architectures to give you hands-on and practical experience working in different architectures.\t </p>\n<p>This book will also guide you through the theory you need to gain a solid foundation of architecture concepts so that you can make your own informed decisions on how to use them in your codebase.\t \t </p>\n<p>After reading this book, you’ll have the knowledge to decide which types of architecture components suit your apps and you’ll have a deep understanding of the covered architectures.\t \t </p>\n<p>You can get the current edition of Advanced iOS App Architecture <a href=\"https://store.raywenderlich.com/products/advanced-ios-app-architecture\">now for just $29.99 (50% off)</a> as part of our Learn At Home sale!</p>\n<h3 id=\"toc-anchor-018\">Upcoming Updates — RxSwift: Reactive Programming with Swift</h3>\n<p><a href=\"https://store.raywenderlich.com/products/rxswift\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-rxswift@2x-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-255005\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-rxswift@2x-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-rxswift@2x-650x500.png 650w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a>\t \t </p>\n<p>Learn reactive programming in Swift with RxSwift! The popularity of reactive programming continues to grow on an ever-increasing number of platforms and languages. Rx lets developers easily and quickly build apps with code that can be understood by other Rx developers — even over different platforms.\t </p>\n<p>Not only will you learn how to use the RxSwift port to create complex reactive applications on iOS, but you’ll also see how to easily solve common application design issues by using RxSwift. Finally, you’ll discover how to exercise full control over the library and leverage full power of reactive programming in your apps.\t </p>\n<p>By the end of the book, you’ll have hands-on experience solving common issues in a reactive paradigm — and you’ll be well on your way to coming up with your own Rx patterns and solutions! \t \t </p>\n<p>RxSwift will be updated to RxSwift 5.1 and Xcode 11. However, the current edition is <a href=\"https://store.raywenderlich.com/products/rxswift\">available now for just $29.99 (50% off)!</a>\t </p>\n<h3 id=\"toc-anchor-019\">Upcoming Updates — Reactive Programming with Kotlin</h3>\n<p><a href=\"https://store.raywenderlich.com/products/reactive-programming-with-kotlin\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-reactive-programming@2x-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-255006\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-reactive-programming@2x-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-reactive-programming@2x-650x500.png 650w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a>\t </p>\n<p>The popularity of reactive programming continues to grow on an ever-increasing number of platforms and languages. Rx lets developers easily and quickly build apps with code that can be understood by other Rx developers—even over different platforms.<br>\nNot only will you learn how to use RxJava to create complex reactive applications on Android, but you’ll also see how to solve common application design issues by using RxJava. Finally, you’ll discover how to exercise full control over the library and leverage the full power of reactive programming in your apps.</p>\n<p>By the end of the book, you’ll have hands-on experience solving common issues in a reactive paradigm—and you’ll be well on your way to coming up with your own Rx patterns and solutions!</p>\n<p>RxAndroid will be updated to Android 10, Android Studio 4.0 and Kotlin 1.3.7. However, the current edition is <a href=\"https://store.raywenderlich.com/products/reactive-programming-with-kotlin\">available now for just $29.99 (50% off)!</a>\t \t </p>\n<h3 id=\"toc-anchor-020\">Upcoming Updates — SwiftUI by Tutorials</h3>\n<p><a href=\"https://store.raywenderlich.com/products/swiftui-by-tutorials\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-swiftui@2x-417x320.png\" alt=\"\" width=\"417\" height=\"320\" class=\"aligncenter size-medium wp-image-255007\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-swiftui@2x-417x320.png 417w, https://koenig-media.raywenderlich.com/uploads/2020/05/mockup-swiftui@2x-650x500.png 650w\" sizes=\"(max-width: 417px) 100vw, 417px\"></a>\t </p>\n<p>SwiftUI by Tutorials will be updated to Swift 5.2 and Xcode 11.4.\t</p>\n<p>But that’s not all! We’ve also listened to reader feedback and have included fixes to errata and bugs reported, such as issues with controls and user input, gestures, accessibility, animations, and state and data flow.<br>\nSwiftUI — the latest addition to the Apple toolkit — will help you build the most fluid and engaging declarative UI for their apps with as little code as possible.\t </p>\n<p>The current edition of SwiftUI by Tutorials is <a href=\"https://store.raywenderlich.com/products/swiftui-by-tutorials\">available on sale today for the special sale price of $29.99 (50% off)!</a></p>\n<h2 id=\"toc-anchor-021\">Learn At Home Giveaway</h2>\n<p>As a final bonus, we were planning to give away <em>five free Advanced iOS &amp; Swift or Advanced Android &amp; Kotlin Bundles</em> to some lucky readers!</p>\n<p>However – the response to our giveaway was <i>so</i> amazing, that <em>we’ve doubled the number of prizes:</em> ten iOS or Android Learn at Home bundles to our winners on the post, and ten iOS or Android Learn at Home bundles to the winners from our Twitter giveaway!</p>\n<p>Here are just some of the wonderful responses we got from members of the community:</p>\n<p></p>\n<center>\n<blockquote class=\"twitter-tweet\" data-width=\"500\" data-dnt=\"true\">\n<p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/borikanes?ref_src=twsrc%5Etfw\">@borikanes</a> and <a href=\"https://twitter.com/bansrides?ref_src=twsrc%5Etfw\">@bansrides</a> are always working to mentor junior developers and support the community through volunteering at hackathons! You should consider them 😇</p>\n<p>— 𝕿homas 𝕵eans (@thomasjeans) <a href=\"https://twitter.com/thomasjeans/status/1264023609061883904?ref_src=twsrc%5Etfw\">May 23, 2020</a></p>\n</blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<p></p>\n</center>\n<p></p>\n<center>\n<blockquote class=\"twitter-tweet\" data-width=\"500\" data-dnt=\"true\">\n<p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/pin_D_C?ref_src=twsrc%5Etfw\">@pin_D_C</a> : an iOS developer who  always try to improve his code and learn new things, so he deserves to get one of these books 😊</p>\n<p>— Bouchra BEKKOUCHE (@bouchra_lmr) <a href=\"https://twitter.com/bouchra_lmr/status/1264032834269970441?ref_src=twsrc%5Etfw\">May 23, 2020</a></p>\n</blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<p></p>\n</center>\n<p></p>\n<center>\n<blockquote class=\"twitter-tweet\" data-width=\"500\" data-dnt=\"true\">\n<p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/NicoonGuitar?ref_src=twsrc%5Etfw\">@NicoonGuitar</a> youuuuuuuu deserve it !!! 🤘🏻</p>\n<p>— Claire Sivadier (@Claire_Rimel) <a href=\"https://twitter.com/Claire_Rimel/status/1264533869388316673?ref_src=twsrc%5Etfw\">May 24, 2020</a></p>\n</blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<p></p>\n</center>\n<p></p>\n<center>\n<blockquote class=\"twitter-tweet\" data-width=\"500\" data-dnt=\"true\">\n<p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/akshay81844?ref_src=twsrc%5Etfw\">@akshay81844</a> should received the android &amp; kotlin bundles, he is a community contributor and with this I believe he can contribute more.</p>\n<p>— Muhammad Rahmatullah (@muh_rahmatullah) <a href=\"https://twitter.com/muh_rahmatullah/status/1263920593038004224?ref_src=twsrc%5Etfw\">May 22, 2020</a></p>\n</blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<p></p>\n</center>\n<div class=\"note\">\n<i>I helped my wife who’s a elementary school teacher learn Kotlin, and now she teaches her students with small projects! Kids are the future.</i> –<a href=\"https://forums.raywenderlich.com/u/rfloresc\" rel=\"noopener\" target=\"_blank\">rfloresc</a>\n</div>\n<div class=\"note\">\n<i>I am currently helping my wife to become an iOS developer by studying with her at nights, after our 2-year-old daughter go to sleep.</i> –<a href=\"https://forums.raywenderlich.com/u/misael23\" rel=\"noopener\" target=\"_blank\">misael23</a>\n</div>\n<div class=\"note\">\n<i>This month, I taught my teenage son how to write a simple game on Lua using the Love2D framework. And he did it! 🙂</i> –<a href=\"https://forums.raywenderlich.com/u/cherry\" rel=\"noopener\" target=\"_blank\">cherry</a>\n</div>\n<div class=\"note\">\n<i>Last week a friend from university was telling me that he wants to learn iOS &amp; macOS development but is kinda overwhelmed and didn’t knew where to start – so I made him a learning path and added useful links / notes that I gathered over the time.</i>  –<a href=\"https://forums.raywenderlich.com/u/jgaeb\" rel=\"noopener\" target=\"_blank\">jgaeb</a>\n</div>\n<p>And the winners are:</p>\n<ul>\n<li><a href=\"https://twitter.com/astamatok\">@astamatok</a></li>\n<li><a href=\"https://twitter.com/ioscode2\">@ioscode2</a></li>\n<li><a href=\"https://twitter.com/fkacquaah\">@fkacquaah</a></li>\n<li><a href=\"https://twitter.com/MargoChepiga\">@MargoChepiga</a></li>\n<li><a href=\"https://twitter.com/JignaPunjabi\">@JignaPunjabi</a></li>\n<li><a href=\"https://twitter.com/gabpa3\">@gabpa3</a></li>\n<li><a href=\"https://twitter.com/tomascordoba\">@tomascordoba</a></li>\n<li><a href=\"https://twitter.com/BennyyPhamm\">@BennyyPhamm</a></li>\n<li><a href=\"https://twitter.com/gavin_K3\">@gavin_K3</a></li>\n<li><a href=\"https://twitter.com/selem32\">@selem32</a></li>\n<li><a href=\"https://forums.raywenderlich.com/u/tabate\">@tabate</a></li>\n<li><a href=\"https://forums.raywenderlich.com/u/sundevils\">@sundevils</a></li>\n<li><a href=\"https://forums.raywenderlich.com/u/battlethem\">@battlethem</a></li>\n<li><a href=\"https://forums.raywenderlich.com/u/rfloresc\">@rfloresc</a></li>\n<li><a href=\"https://forums.raywenderlich.com/u/jgaeb\">@jgaeb</a></li>\n<li><a href=\"https://forums.raywenderlich.com/u/akirna\">@akirna</a></li>\n<li><a href=\"https://forums.raywenderlich.com/u/isuru\">@isuru</a></li>\n<li><a href=\"https://forums.raywenderlich.com/u/leoravagnani\">@leoravagnani</a></li>\n<li><a href=\"https://forums.raywenderlich.com/u/yuan1337\">@yuan1337</a></li>\n<li><a href=\"https://forums.raywenderlich.com/u/sunnyp\">@sunnyp</a></li>\n</ul>\n<p>Congratulations to the winners! Our Customer Support and Marketing Teams will be in touch shortly to see which bundle you’d prefer.</p>\n<h2 id=\"toc-anchor-022\">Any Questions?</h2>\n<p>We’ve created a special FAQ page devoted to the Learn At Home Sale, to answer any questions you might have:</p>\n<ul>\n<li><a href=\"https://www.raywenderlich.com/10557661-raywenderlich-com-learn-at-home-sale-faq\">Learn At Home Sale FAQ</a></li>\n</ul>\n<h2 id=\"toc-anchor-023\">Where to Go From Here?</h2>\n<p>Here’s a recap of our Learn At Home Sale:</p>\n<ul>\n<li>\n<em>Advanced iOS &amp; Swift Bundle for just $99.99:</em> Save big with our <a href=\"https://store.raywenderlich.com/products/advanced-ios-and-swift-learn-at-home-bundle-2020\">Advanced iOS &amp; Swift Bundle,</a> containing our three newly announced books and two other must-haves for your development library for just $99.99 (66% off)!</li>\n<li>\n<em>Advanced Android &amp; Kotlin Bundle for just $99.99:</em> Learn more for less with <a href=\"https://store.raywenderlich.com/products/advanced-android-learn-at-home-bundle-2020\">Advanced Android &amp; Kotlin Bundle,</a> containing two of our newly announced books and three of our most popular Android books for just $99.99 (66% off)!</li>\n<li>\n<em>50% of all single books</em>: <a href=\"https://store.raywenderlich.com/\">Visit our store page</a> to see everything that’s on sale, including 50% off all of our individual books!</li>\n</ul>\n<p>We hope that this event not only celebrates the hard work our book teams have put in to bring you the most up-to-date and relevant mobile development books, but also that it can bring some positive growth to your life and career aspirations as well.</p>\n<p>We hope you enjoy everything in our Learn At Home Sale — and on behalf of the entire raywenderlich.com team, thank you for your support! :]</p>\n<p></p>\n<center><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/plants@2x-480x168.png\" alt=\"\" width=\"480\" height=\"168\" class=\"aligncenter size-medium wp-image-255198\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/plants@2x-480x168.png 480w, https://koenig-media.raywenderlich.com/uploads/2020/05/plants@2x-650x228.png 650w, https://koenig-media.raywenderlich.com/uploads/2020/05/plants@2x.png 1200w\" sizes=\"(max-width: 480px) 100vw, 480px\"></center>\n\n"
        }
    },
    {
        "id": "9556022",
        "type": "contents",
        "attributes": {
          "uri": "rw://koenig/post/250416",
          "name": "Drawing Custom Shapes in Android",
          "description": "Learn how to draw custom shapes and paths in Android by creating a neat curved profile card with gradient colors.\n",
          "released_at": "2020-05-18T15:30:59.000Z",
          "free": true,
          "difficulty": "beginner",
          "content_type": "article",
          "duration": 1860,
          "popularity": 58570,
          "technology_triple_string": "Kotlin 1.3, Android 4.4, Android Studio 3.6",
          "contributor_string": "Julia Zinchenko, April Rames, Fabio Bombardi, Jenn Bailey, Eric Soto & Ahmed Tarek",
          "ordinal": null,
          "professional": false,
          "description_plain_text": "Learn how to draw custom shapes and paths in Android by creating a neat curved profile card with gradient colors.\n",
          "video_identifier": null,
          "parent_name": null,
          "accessible": true,
          "card_artwork_url": "https://koenig-media.raywenderlich.com/uploads/2020/04/DrawingCustomShapes-feature.png",
          "body": "\n\n<p>Did you ever want to create highly-customized user interfaces in Android? Then this is the tutorial for you!</p>\n<p>To draw custom shapes, you need to keep iterating until you achieve the beautiful art you want. In this tutorial, you’ll learn how to draw your design on paper first to avoid wasting time via trial and error.</p>\n<p>You’ll improve an app called <em>Stars of Science</em>. You’ll learn how to create custom shapes by painting a profile card with a curved custom shape and gradient colors.</p>\n<p>Throughout the tutorial, you’ll learn how to:</p>\n<ul>\n<li>Prepare a custom shape on <em>paper</em> before coding.</li>\n<li>Extend the Android <code>View</code> to draw and paint it on the <code>Canvas</code>.</li>\n<li>Draw a <em>curved</em> shape in <em>gradient<em></em> colors.</em>\n</li>\n</ul>\n<p>The custom shape you’ll create will look like this:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/03/final_profile_card.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/03/final_profile_card-444x320.png\" alt=\"Android custom shape\" width=\"444\" height=\"320\" class=\"aligncenter size-medium bordered wp-image-250549\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/03/final_profile_card-444x320.png 444w, https://koenig-media.raywenderlich.com/uploads/2020/03/final_profile_card-650x468.png 650w, https://koenig-media.raywenderlich.com/uploads/2020/03/final_profile_card.png 1440w\" sizes=\"(max-width: 444px) 100vw, 444px\"></a></p>\n<div class=\"note\">\n<em>Note</em>: This tutorial assumes you understand the basics of Android development with Kotlin. If you’re new to Android development, please go through <a href=\"https://www.raywenderlich.com/177533/beginning-android-development-kotlin-part-one-installing-android-studio\" target=\"_blank\" rel=\"noopener\">Beginning Android Development with Kotlin</a> to understand the basics. If you’re new to Kotlin, check out this <a href=\"https://www.raywenderlich.com/174395/kotlin-for-android-an-introduction-2\" target=\"_blank\" rel=\"noopener\">Introduction to Kotlin</a> tutorial.</div>\n<h2 id=\"toc-anchor-001\">Getting Started</h2>\n<p>Download the project materials by clicking the <em>Download Materials</em> button at the top or bottom of this tutorial. Launch <em>Android Studio 3.6.1</em> or later and select <em>Open an existing Android Studio project</em>. Then navigate to and select the starter project folder where you’ll find the files you need to start, along with some widgets.</p>\n<p>Your app already has its basic UI set up so you can focus on drawing custom shapes in Android.</p>\n<p>Build and run the app. You’ll see the following screen on your mobile phone or Android emulator:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/03/first_shape-1.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/03/first_shape-1.png\" alt=\"The starter app showing a plain bio card\" width=\"330\" class=\"aligncenter bordered size-full wp-image-250555\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/03/first_shape-1.png 1440w, https://koenig-media.raywenderlich.com/uploads/2020/03/first_shape-1-180x320.png 180w, https://koenig-media.raywenderlich.com/uploads/2020/03/first_shape-1-281x500.png 281w\" sizes=\"(max-width: 1440px) 100vw, 1440px\"></a><a></a></p>\n<p>It’s not bad, but the top of the card doesn’t have much pizazz. You’ll change that throughout the tutorial.</p>\n<h3 id=\"toc-anchor-002\">Exploring the Project</h3>\n<p>Take a quick look at the project structure. Expand <em>starsofscience</em> package and check out the folders inside:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/03/project_structure.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/03/project_structure.png\" alt=\"\" width=\"331\" height=\"296\" class=\"aligncenter size-full bordered wp-image-251375\"></a></p>\n<p>Here’s a breakdown of the folders:</p>\n<ul>\n<li>\n<em>utils</em> contains four files with extension functions you’ll use in your painting journey.</li>\n<li>\n<em>view</em> contains <code>CircularImageView</code> which you’ll use to display the avatar in a circular shape. The code inside this class is out of the scope of this tutorial.</li>\n<li>\n<em>starsofscience</em> contains three files:\n<ul>\n<li>\n<em>MainActivity.kt</em> is the app’s main and luncher <em>activity</em>.</li>\n<li>\n<em>Painter.kt</em> contains <em>paint()</em> which you’ll implement to paint your custom shape. You’ll add all drawing and painting logic to this function.</li>\n<li>\n<em>CustomPainter.kt</em> is a custom Android <em>View</em> with a constructor accepting the width and height of your custom shape in addition to a painter object that has all the drawing and painting logic. This <code>CustomPainter</code> overrides <code>onDraw()</code> and delegates all the drawing to the <em>painter</em> by executing <code>canvas?.let(painter::paint)</code>.</li>\n</ul>\n</li>\n</ul>\n<p>Now that you know more about the classes you’ll work with take a moment to learn some of the theory behind making beautiful shapes.</p>\n<h2 id=\"toc-anchor-003\">Coding Your Shapes</h2>\n<p>Before diving into drawing with Android <code>Canvas</code>, you need to know which tools you’ll need, how to use them and how to prepare to code your target shape.</p>\n<p>Think about drawing in the physical world. To draw a shape, you need to get a pencil and paper and then use your hand to move the pencil across the paper’s surface. Finally, if you want to make it beautiful, you need to get a brush with some paint. </p>\n<p>In this section, you’ll start by drawing a shape freehand. Grab a pencil and paper and get ready!</p>\n<h3 id=\"toc-anchor-004\">Know Your Canvas</h3>\n<p>Your canvas acts as the digital version of the piece of paper you draw on. It holds all your drawing elements, including lines, curves, arches, shapes, text and images.</p>\n<p>The canvas needs a size, including width and height. Drawing on a canvas without knowing its size can lead to unexpected results.</p>\n<p>On your paper, before drawing any shape, define the canvas by drawing a rectangle of any size you want. Any shapes you draw later will be relative to that canvas.</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/01/paper1.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/01/paper1-465x320.png\" alt=\"Rectangle on paper\" width=\"465\" height=\"320\" class=\"aligncenter size-medium bordered wp-image-243189\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/01/paper1-465x320.png 465w, https://koenig-media.raywenderlich.com/uploads/2020/01/paper1-650x447.png 650w\" sizes=\"(max-width: 465px) 100vw, 465px\"></a></p>\n<div class=\"note\">\n<em>Note</em>: You don’t want your shapes to have an absolute position or size. Instead, make them relative to the size of the canvas. This lets you display your shapes on different devices with different screen sizes.\n<p>For instance, you might place your shape at the center of the canvas or make its size equal to half of the canvas size.</p>\n</div>\n<p>Now that you have a canvas, it’s time to create a shape.</p>\n<h3 id=\"toc-anchor-005\">Defining How to Move Your Pencil</h3>\n<p>In visual arts, you have to move your pencil properly across the paper’s surface to create your artwork. You’ll use the same mechanism to draw on the canvas.</p>\n<p>Before you can draw a shape, you need to consider which functionalities the canvas object needs to have.</p>\n<p>For instance, if you want to draw a square, you need to draw four lines. So, you need the <em>drawing line</em> function in your framework. On the other hand, if you want to draw a crescent, you need to draw two curves with the <em>drawing curve</em> function.</p>\n<p>Pick up your pencil and draw a circle in the center of the circle that’s a quarter of the width, like this:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/01/paper2.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/01/paper2-465x320.png\" alt=\"Draw a circle on paper\" width=\"465\" height=\"320\" class=\"aligncenter size-medium bordered wp-image-243190\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/01/paper2-465x320.png 465w, https://koenig-media.raywenderlich.com/uploads/2020/01/paper2-650x447.png 650w\" sizes=\"(max-width: 465px) 100vw, 465px\"></a></p>\n<p>Now, to convert that shape on your paper into a shape in Android, you need to consider its coordinates.</p>\n<h3 id=\"toc-anchor-006\">Calculating Coordinates</h3>\n<p>Coordinates are pairs of numbers that define the exact location of a point on a plane.</p>\n<p>Before you draw anything, you need to know the main points that make up that shape. For good practice, calculate all the coordinates and dimensions on your paper before writing any code. This saves you coding time and makes you focus on translating that shape from the paper onto your device.</p>\n<p>Since you already drew a circle relative to the canvas on your paper, you already calculated two things:</p>\n<ol>\n<li>\n<em>The center of the circle</em>: Since your circle is at the center of the canvas, the center of the circle is the center of the canvas. So the <em>x</em> coordinate of the circle’s center is equal to half of the width of the canvas and the <em>y</em> coordinate of the circle’s center is equal to half of the height of the canvas. This means that:<br>\n<code>cx = canvas width / 2</code><br>\n<code>cy = canvas height / 2</code>\n</li>\n<li>\n<em>The radius</em>: Since your circle is a quarter of the canvas width, the diameter of the circle is equal to a quarter of the width of the canvas. The radius is equal to half of the diameter. That means:<br>\n<code>diameter = canvas width / 4</code><br>\n<code>radius = diameter / 2 = canvas width / 8</code>\n</li>\n</ol>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/01/paper3.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/01/paper3-465x320.png\" alt=\"Circle properties\" width=\"465\" height=\"320\" class=\"aligncenter size-medium bordered wp-image-243191\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/01/paper3-465x320.png 465w, https://koenig-media.raywenderlich.com/uploads/2020/01/paper3-650x447.png 650w\" sizes=\"(max-width: 465px) 100vw, 465px\"></a></p>\n<p>See, drawing your shapes on paper helps you calculate the points you need to draw your shape relative to the canvas.</p>\n<p>It’s efficient to visualize what you need to do before it’s time to translate your ideas into code. Making paper sketches is a prerequisite for your custom drawing! :]</p>\n<h2 id=\"toc-anchor-007\">Using CustomPainter</h2>\n<p>Now that you’ve learned some theory, it’s time to start using the Android <code>Canvas</code> and add some code that will reproduce your drawing in the app. </p>\n<h3 id=\"toc-anchor-008\">Implementing the Painter Interface</h3>\n<p>Start by creating a new class <code>ProfileCardPainter</code> in the <em>starsofscience</em> package. Then replace the whole file content with:</p>\n<pre lang=\"kotlin\">\r\npackage com.raywenderlich.android.starsofscience\r\n\r\nimport android.graphics.*\r\nimport androidx.annotation.ColorInt\r\n\r\n//1\r\nclass ProfileCardPainter(\r\n    //2\r\n    @ColorInt private val color: Int\r\n) : Painter {\r\n  //3\r\n  override fun paint(canvas: Canvas) {\r\n\r\n  }\r\n}\r\n</pre>\n<p>Here you:</p>\n<ol>\n<li>Define a new class named <code>ProfileCardPainter</code> that implements the interface <code>Painter</code>.</li>\n<li>Then in its primary constructor you define the profile color as a class property.</li>\n<li>Finally, you implement <code>paint(canvas: Canvas)</code>. <code>CustomPainter</code> will call this method whenever the object needs to paint.\n<p>You’ll write all your drawing code inside this function, which gives you one parameter: The <code>canvas</code> to draw on.</p>\n</li>\n</ol>\n<h3 id=\"toc-anchor-009\">Rendering With CustomPainter</h3>\n<p>Go to <em>MainActivity.kt</em>. You’ll find the following line of code in <code>onCreate()</code>:</p>\n<pre lang=\"kotlin\">\r\nprofileCardContainer.setBackgroundColor(R.color.colorPrimary.toColorInt(this))\r\n</pre>\n<p>It sets a background color to the <code>profileCardContainer</code> which is a <code>FrameLayout</code> already defined in XML. You don’t need that line anymore because you want to add your custom shape instead of that solid color.</p>\n<p>Replace that line with the following code:</p>\n<pre lang=\"kotlin\">\r\n//1\r\nval azureColor = R.color.colorPrimary.toColorInt(this)\r\nval avatarRadius = R.dimen.avatar_radius.resToPx(this)\r\nval avatarMargin = R.dimen.avatar_margin.resToPx(this)\r\nval cardWidth = ViewGroup.LayoutParams.MATCH_PARENT\r\nval cardHeight = R.dimen.profile_card_height.resToPx(this).toInt()\r\n//2\r\nval painter = ProfileCardPainter(\r\n  color = azureColor\r\n)\r\n//3\r\nprofileCardContainer.addView(\r\n  CustomPainter(\r\n    context = this,\r\n    width = cardWidth,\r\n    height = cardHeight,\r\n    painter = painter\r\n  )\r\n)\r\n</pre>\n<p>Add any missing import by pressing <em>Option+Enter</em> on Mac or <em>Alt+Enter</em> on PC.</p>\n<p>In the code above:</p>\n<ol>\n<li>You define the properties of your custom shape: <em>Color</em>, avatar <em>radius</em>, avatar <em>margin</em>, <em>width</em> and <em>height</em>.</li>\n<li>Then, you create a <code>ProfileCardPainter</code> with the color you previously defined.</li>\n<li>Finally, you add a new <code>CustomPainter</code> as a subview of <code>profileCardContainer</code> by passing all its needed properties:\n<ul>\n<li>\n<code>context</code> to create this custom Android <code>View</code>.</li>\n<li>\n<code>width</code> and <code>height</code> of the custom shape.</li>\n<li>\n<code>painter</code> responsible for all the drawing logic.</li>\n</ul>\n</li>\n</ol>\n<p>Build and run the app to see… a pretty ugly card because you haven’t drawn anything yet. Don’t worry, you’ll start drawing something in a moment. :]</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/03/no_drawing.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/03/no_drawing.png\" alt=\"Initial changes to the app\" width=\"330\" class=\"aligncenter bordered size-full bordered wp-image-250558\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/03/no_drawing.png 1440w, https://koenig-media.raywenderlich.com/uploads/2020/03/no_drawing-180x320.png 180w, https://koenig-media.raywenderlich.com/uploads/2020/03/no_drawing-281x500.png 281w\" sizes=\"(max-width: 1440px) 100vw, 1440px\"></a></p>\n<h2 id=\"toc-anchor-010\">Drawing Your First Shape</h2>\n<p>In this section, you’ll practice with the tools you need to draw in the computer graphics world. They’re a lot like the physical tools you used to draw a circle on a paper. Then, with this knowledge, you’ll draw your first shape!</p>\n<div class=\"note\">\n<em>Note</em>: Graphics libraries have similar APIs for drawing, which makes drawing in Android comparable to drawing in iOS, Flutter and the web. When you master drawing custom shapes on one platform, it’s easy to reuse this knowledge on other platforms.</div>\n<h3 id=\"toc-anchor-011\">Drawing and Painting a Rectangle</h3>\n<p>To draw a rectangle, you need to create a <code>RectF</code> object with the size you want. You then need a <code>Paint</code> object with the color you prefer to start drawing that <code>RectF</code> on the canvas.</p>\n<p><code>RectF</code> is a simple class with four immutable <code>float</code> properties: Left, top, right and bottom. These four numbers represent a rectangle, where:</p>\n<ul>\n<li>\n<em>Left</em> is the left-most point on the x-axis.</li>\n<li>\n<em>Top</em> is the top-most point on the y-axis.</li>\n<li>\n<em>Right</em> is the right-most point on the x-axis.</li>\n<li>\n<em>Bottom</em> is the bottom-most point on the y-axis.</li>\n</ul>\n<div class=\"note\">\n<em>Note</em>: You can calculate any extra properties in <code>RectF</code>, like the width and height, based on these four main properties.\n<p>In this tutorial, you’ll rely on <code>RectF</code> for your shape bounds. You’ll draw each shape inside of and based on a certain <code>RectF</code>.\n</p>\n</div>\n<p>In <em>ProfileCardPainter.kt</em>, go to <code>paint()</code> and add the following:</p>\n<pre lang=\"kotlin\">\r\n//1\r\nval width = canvas.width.toFloat()\r\nval height = canvas.height.toFloat()\r\n//2\r\nval shapeBounds = RectFFactory.fromLTWH(0f, 0f, width, height)\r\n//3\r\nval paint = Paint()\r\npaint.color = color\r\n//4\r\ncanvas.drawRect(shapeBounds, paint)\r\n</pre>\n<p>Add any missing import by pressing <em>Option+Enter</em> on Mac or <em>Alt+Enter</em> on PC.</p>\n<p>Here’s what this code defines:</p>\n<ol>\n<li>The <code>width</code> and <code>height</code> of the canvas.</li>\n<li>\n<code>shapeBounds</code> is a <code>RectF</code> with a size that fits the whole area of the canvas by using the factory function <code>fromLTWH()</code>.</li>\n<li>\n<code>paint</code> is your paint and its color.\n</li>\n<li>Finally, you draw your <code>shapeBounds</code> on the <code>canvas</code> by passing it to <code>drawRect()</code> along with your <code>paint</code> from the previous line.</li>\n</ol>\n<p>Now, build and run the app. See that the card now has a blue rectangle as its background. Hooray, you’ve drawn your first shape! :]</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/03/first_shape-1.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/03/first_shape-1.png\" alt=\"The starter app showing a plain bio card\" width=\"330\" class=\"aligncenter bordered size-full wp-image-250555\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/03/first_shape-1.png 1440w, https://koenig-media.raywenderlich.com/uploads/2020/03/first_shape-1-180x320.png 180w, https://koenig-media.raywenderlich.com/uploads/2020/03/first_shape-1-281x500.png 281w\" sizes=\"(max-width: 1440px) 100vw, 1440px\"></a></p>\n<p>That’s better, but there’s still much room for improvement!</p>\n<h2 id=\"toc-anchor-012\">Using a Path to Draw the Profile Card</h2>\n<p>A <em>path</em> is not a bitmap or raster, and it doesn’t have pixels. It’s an outline that represents a series of smooth lines, arcs or Bézier curves. Using a path makes your shapes <em>scalable</em> and <em>independent</em> of the screen’s resolution.</p>\n<p><code>Path</code> is a powerful class that you can use in many situations. For example, you can clip a bitmap by a path, or you can use a path to draw a custom shape like you’re about to do right now.</p>\n<h3 id=\"toc-anchor-013\">Drawing the Profile Card</h3>\n<p>In this section, you’ll start using the <code>Path</code> class to draw a more complex shape like the blue shape here:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/01/bounds.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/01/bounds-457x320.png\" alt=\"Profile card shape\" width=\"457\" height=\"320\" class=\"aligncenter size-medium bordered wp-image-243208\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/01/bounds-457x320.png 457w, https://koenig-media.raywenderlich.com/uploads/2020/01/bounds-650x455.png 650w, https://koenig-media.raywenderlich.com/uploads/2020/01/bounds.png 1600w\" sizes=\"(max-width: 457px) 100vw, 457px\"></a></p>\n<p>But before you start, you need to do some preparation.</p>\n<p>There are a few things you should note in the previous image:</p>\n<ul>\n<li>\n<em>Black dashed</em> rectangle: Represents the whole canvas.</li>\n<li>\n<em>Red dashed</em> rectangle: Marks the bounds of the blue shape. It has  the same width and height as the canvas, except that you subtract the <em>avatar radius</em> from its height.</li>\n<li>\n<em>Blue shape</em>: A rectangle with a half circle, an arc of a circle, as a negative space at the bottom center. This arc should have a radius equal to the radius of the avatar.</li>\n</ul>\n<div class=\"note\">\n<em>Note</em>: An <em>arc</em> is a segment of a curve. In this case, the arc you’ll use is a section of a circle’s circumference, also called a circular arc.\n</div>\n<p>The image below shows a blue arc that starts at the zero degree angle and sweeps to 90 degrees.</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/01/arc.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/01/arc-461x320.png\" alt=\"90 degrees arc\" width=\"461\" height=\"320\" class=\"aligncenter size-medium bordered wp-image-243361\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/01/arc-461x320.png 461w, https://koenig-media.raywenderlich.com/uploads/2020/01/arc-650x451.png 650w, https://koenig-media.raywenderlich.com/uploads/2020/01/arc.png 1392w\" sizes=\"(max-width: 461px) 100vw, 461px\"></a></p>\n<p>First, get the radius of the avatar. Start by adding a new class property called <code>avatarRadius</code> to your <code>ProfileCardPainter</code> primary constructor:</p>\n<pre lang=\"kotlin\">\r\nclass ProfileCardPainter(\r\n    @ColorInt private val color: Int,\r\n    private val avatarRadius: Float\r\n) : Painter {\r\n</pre>\n<p>Then, go to <em>MainActivity.kt</em> and, in <code>onCreate()</code>, pass the <code>avatarRadius</code> to <code>ProfileCardPainter</code>:</p>\n<pre lang=\"kotlin\">\r\nval painter = ProfileCardPainter(\r\n  color = azureColor,\r\n  avatarRadius = avatarRadius\r\n)\r\n</pre>\n<p>Finally, return to <em>ProfileCardPainter.kt</em> and update the <code>shapeBounds</code> by subtracting the <code>avatarRadius</code> from its height in <code>fromLTWH()</code>:</p>\n<pre lang=\"kotlin\">\r\nval shapeBounds = RectFFactory.fromLTWH(0f, 0f, width, height - avatarRadius)\r\n</pre>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/01/radius.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/01/radius-451x320.png\" alt=\"The avatar radius\" width=\"451\" height=\"320\" class=\"aligncenter size-medium bordered wp-image-243211\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/01/radius-451x320.png 451w, https://koenig-media.raywenderlich.com/uploads/2020/01/radius-650x461.png 650w\" sizes=\"(max-width: 451px) 100vw, 451px\"></a></p>\n<p>To see the results build and run the app:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/03/shape_bounds.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/03/shape_bounds.png\" alt=\"Initial results for your custom painter\" width=\"330\" class=\"aligncenter bordered size-full wp-image-250562\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/03/shape_bounds.png 1440w, https://koenig-media.raywenderlich.com/uploads/2020/03/shape_bounds-180x320.png 180w, https://koenig-media.raywenderlich.com/uploads/2020/03/shape_bounds-281x500.png 281w\" sizes=\"(max-width: 1440px) 100vw, 1440px\"></a></p>\n<p>Great! Now the blue background stops halfway down the length of the avatar.</p>\n<h3 id=\"toc-anchor-014\">Adding Negative Space Around the Avatar</h3>\n<p>Next, you’ll add some negative space to the blue shape to set it apart from the avatar. Add a new function called <code>drawBackground()</code> to <code>ProfileCardPainter</code>:</p>\n<pre lang=\"kotlin\">\r\n\r\nprivate fun drawBackground(canvas: Canvas, bounds: RectF, avatarBounds: RectF) {\r\n  //1\r\n  val paint = Paint()\r\n  paint.color = color\r\n\r\n  //2\r\n  val backgroundPath = Path().apply {\r\n    // 3\r\n    moveTo(bounds.left, bounds.top)\r\n    // 4\r\n    lineTo(bounds.bottomLeft.x, bounds.bottomLeft.y)\r\n    // 5\r\n    lineTo(avatarBounds.centerLeft.x, avatarBounds.centerLeft.y)\r\n    // 6\r\n    arcTo(avatarBounds, -180f, 180f, false)\r\n    // 7\r\n    lineTo(bounds.bottomRight.x, bounds.bottomRight.y)\r\n    // 8\r\n    lineTo(bounds.topRight.x, bounds.topRight.y)\r\n    // 9\r\n    close() \r\n  }\r\n\r\n  //10\r\n  canvas.drawPath(backgroundPath, paint);\r\n}\r\n</pre>\n<p>Add any missing import by pressing <em>Option+Enter</em> on Mac or <em>Alt+Enter</em> on PC. To import all the extension functions you need for <code>RectF</code> in a row, add the following import:</p>\n<pre lang=\"kotlin\">\r\nimport com.raywenderlich.android.starsofscience.utils.*\r\n</pre>\n<p>This diagram illustrates the proper coordinates for each point you need to build the path.</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/01/custom_shape1.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/01/custom_shape1-457x320.png\" alt=\"Custom path\" width=\"457\" height=\"320\" class=\"aligncenter size-medium bordered wp-image-243209\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/01/custom_shape1-457x320.png 457w, https://koenig-media.raywenderlich.com/uploads/2020/01/custom_shape1-650x455.png 650w, https://koenig-media.raywenderlich.com/uploads/2020/01/custom_shape1.png 1600w\" sizes=\"(max-width: 457px) 100vw, 457px\"></a></p>\n<p>In the previous code:</p>\n<ol>\n<li>You create a <code>Paint</code> object and set its color.</li>\n<li>Then, you create a <code>Path</code> object.</li>\n<li>You move to the top-left corner, <em>P1</em>, without drawing a line. This is like moving a pencil to a starting point without touching the paper.</li>\n<li>Next, you add a straight line that starts at <em>P1</em> and ends at <em>P2</em>.\n</li>\n<li>Then, you add a straight line that starts at <em>P2</em> and ends at <em>P3</em>: The point at the edge of where you will start drawing the arc.\n</li>\n<li>Then, starting from <em>P3</em>, add an arc in the upper half region of the avatar bounds: The arc starts from the angle <code>-180</code> degrees and sweeps by <code>180</code> degrees ending at <em>P4</em>.<br>\nYou pass <code>false</code> as the last parameter to prevent starting a new sub-path for the arc. This tells Android that you want the arc on the same path.</li>\n<li>Next, you add a straight line that starts from the current point and ends at <em>P5</em> at the bottom-right corner.</li>\n<li>You finish by adding a straight line that starts from the current point <em>P5</em> and ends at the given point <em>P6</em> at the top-right corner.</li>\n<li>Then you close the path by adding a straight line that starts at the current point <em>P6</em> and ends at the beginning point on the path, <em>P1</em>.</li>\n<li>Finally, you draw the <code>backgroundPath</code> on the canvas by passing it to <code>drawPath()</code> with <code>paint</code>.</li>\n</ol>\n<p>In the previous code, you can collapse lines five and six in a single line. Do you know how? You can find the solution in the spoiler below.</p>\n<p>[spoiler title=”Solution”]<br>\nYou can collapse lines five and six by leaving only line six. </p>\n<pre lang=\"kotlin\">arcTo(avatarBounds, -180f, 180f, false)</pre>\n<p>The <a href=\"https://developer.android.com/reference/android/graphics/Path#arcTo(android.graphics.RectF,%20float,%20float,%20boolean)\" rel=\"noopener\" target=\"_blank\">official documentation</a> of </p>\n<p><code>arcTo(RectF oval, float startAngle, float sweepAngle, boolean forceMoveTo)</code> </p>\n<p>states: <i>“If the start of the path is different from the path’s current last point, then an automatic <code>lineTo()</code> is added to connect the current contour to the start of the arc.”</i><br>\n[/spoiler]</p>\n<p>Phew! That was a lot of code, but it was worth the effort!</p>\n<h3 id=\"toc-anchor-015\">Creating the Rectangle Around the Avatar</h3>\n<p>In <code>ProfileCardPainter</code>, go to <code>paint()</code> and replace the last three lines:</p>\n<pre lang=\"kotlin\">\r\n    val paint = Paint()\r\n    paint.color = color\r\n    canvas.drawRect(shapeBounds, paint)\r\n</pre>\n<p>with the following code to create a new <code>RectF</code> around the avatar:</p>\n<pre lang=\"kotlin\">\r\n//1\r\nval centerAvatar = PointF(shapeBounds.centerX(), shapeBounds.bottom)\r\n//2\r\nval avatarBounds = RectFFactory.fromCircle(center = centerAvatar, radius = avatarRadius)\r\n//3\r\ndrawBackground(canvas, shapeBounds, avatarBounds)\r\n</pre>\n<p>Here’s what this code does:</p>\n<ol>\n<li>You create a <code>PointF</code> object for the center point of the avatar, where <code>x</code> is the <code>shapeBounds.centerX()</code> and <code>y</code> is the <code>bottom</code> of the <code>shapeBounds</code>.</li>\n<li>Then, you create a <code>RectF</code> object from the avatar circle using <code>fromCircle()</code>. The center is <code>centerAvatar</code>, which you just created, and the radius is the <code>avatarRadius</code>.</li>\n<li>Finally, you call <code>drawBackground()</code> and pass the canvas with rest of the parameters to draw your first path.</li>\n</ol>\n<p>Build and run the app. You’ll see this:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/03/shape_bounds.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/03/shape_bounds.png\" alt=\"Initial results for your custom painter\" width=\"330\" class=\"aligncenter bordered size-full wp-image-250562\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/03/shape_bounds.png 1440w, https://koenig-media.raywenderlich.com/uploads/2020/03/shape_bounds-180x320.png 180w, https://koenig-media.raywenderlich.com/uploads/2020/03/shape_bounds-281x500.png 281w\" sizes=\"(max-width: 1440px) 100vw, 1440px\"></a></p>\n<p>You probably don’t notice the difference yet. Don’t worry, you’ll fix that next.</p>\n<h3 id=\"toc-anchor-016\">Adding a Margin Around the Avatar</h3>\n<p>There <i>is</i> a difference, but you can’t see it because the negative space is exactly equal to the circular avatar’s size. Next, you’ll make that negative space a bit bigger to leave a margin between it and the avatar.</p>\n<p>First, get the margin of the avatar. Start by adding one more class property called <code>avatarMargin</code> to your <code>ProfileCardPainter</code> primary constructor, don’t forget the comma at the end of the line above the new code.</p>\n<pre lang=\"kotlin\">\r\nclass ProfileCardPainter(\r\n    ...\r\n    private val avatarMargin: Float\r\n)\r\n</pre>\n<p>Then, go to <em>MainActivity.kt</em> and, in <code>onCreate()</code>, pass the <code>avatarMargin</code> to the <code>ProfileCardPainter</code> constructor:</p>\n<pre lang=\"kotlin\">\r\nval painter = ProfileCardPainter(\r\n  ...\r\n  avatarMargin = avatarMargin\r\n)\r\n</pre>\n<p>Finally, return to <em>ProfileCardPainter.kt</em> and\\where you create the <code>avatarBounds</code> in <code>paint<code></code>, add <code>.inflate(avatarMargin)</code> to the end: </code></p>\n<pre lang=\"kotlin\">\r\nval avatarBounds = RectFFactory.fromCircle(center = centerAvatar, radius = avatarRadius).inflate(avatarMargin)\r\n</pre>\n<p>Calling <code>inflate()</code> on a <code>RectF</code> creates a new <code>RectF</code> object whose left, top, right and bottom edges are moved outwards by the given value. The result is a nice space around the avatar.</p>\n<p>To see the margin in action, build and run the app.</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/03/negative_space_margin.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/03/negative_space_margin.png\" alt=\"Margin around the avatar\" width=\"330\" class=\"aligncenter bordered size-full wp-image-250565\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/03/negative_space_margin.png 1440w, https://koenig-media.raywenderlich.com/uploads/2020/03/negative_space_margin-180x320.png 180w, https://koenig-media.raywenderlich.com/uploads/2020/03/negative_space_margin-281x500.png 281w\" sizes=\"(max-width: 1440px) 100vw, 1440px\"></a></p>\n<p>Pretty... but ordinary. Next, you'll spice up the background by adding an attractive curved shape.</p>\n<h2 id=\"toc-anchor-017\">Adding More Neat Shapes</h2>\n<p>To enhance your custom shape, you can add some simple decorations like stars or circles in a partially-faded color. For this app, you'll add a more interesting decoration: A curvy shape in gradient colors.</p>\n<h3 id=\"toc-anchor-018\">Adding a Curved Shape</h3>\n<p>Before you start drawing, take a moment to learn about the different types of curves. The <em>Quadratic Bézier Curve</em> and the <em>Cubic Bézier Curve</em> are two commonly used curves.</p>\n<ul>\n<li>A <em>quadratic Bézier curve</em> requires three points to draw: A start point, an endpoint and a handle point that pulls the curve towards it.\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/01/bezier_quardestice.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/01/bezier_quardestice-480x277.png\" alt=\"Quadratic Bézier Curve\" width=\"480\" height=\"277\" class=\"aligncenter bordered size-medium wp-image-243247\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/01/bezier_quardestice-480x277.png 480w, https://koenig-media.raywenderlich.com/uploads/2020/01/bezier_quardestice-650x375.png 650w, https://koenig-media.raywenderlich.com/uploads/2020/01/bezier_quardestice.png 1363w\" sizes=\"(max-width: 480px) 100vw, 480px\"></a></p>\n</li>\n<li>A <em>cubic Bézier curve</em> needs four points to draw: A start point, an end point and <i>two</i> handle points that pull the curve towards them.\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/01/bezier_cubic.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/01/bezier_cubic-480x277.png\" alt=\"Cubic Bézier Curve\" width=\"480\" height=\"277\" class=\"aligncenter bordered size-medium wp-image-243246\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/01/bezier_cubic-480x277.png 480w, https://koenig-media.raywenderlich.com/uploads/2020/01/bezier_cubic-650x375.png 650w, https://koenig-media.raywenderlich.com/uploads/2020/01/bezier_cubic.png 1363w\" sizes=\"(max-width: 480px) 100vw, 480px\"></a></p>\n</li>\n</ul>\n<p>Next, you'll use a quadratic Bézier curve to create an interesting background shape.</p>\n<h3 id=\"toc-anchor-019\">Drawing a Quadratic Bézier Curve</h3>\n<p>Start by creating a new function called <code>drawCurvedShape()</code> inside <code>ProfileCardPainter</code> with the following:</p>\n<pre lang=\"kotlin\">\r\nprivate fun drawCurvedShape(canvas: Canvas, bounds: RectF, avatarBounds: RectF) {\r\n  //1\r\n  val paint = Paint()\r\n  paint.color = color.darkerShade()\r\n\r\n  //2\r\n  val handlePoint = PointF(bounds.left + (bounds.width() * 0.25f), bounds.top)\r\n\r\n  //3\r\n  val curvePath = Path().apply {\r\n    //4\r\n    moveTo(bounds.bottomLeft.x, bounds.bottomLeft.y)\r\n    //5\r\n    lineTo(avatarBounds.centerLeft.x, avatarBounds.centerLeft.y)\r\n    //6\r\n    arcTo(avatarBounds, -180f, 180f, false)\r\n    //7\r\n    lineTo(bounds.bottomRight.x, bounds.bottomRight.y)\r\n    //8\r\n    lineTo(bounds.topRight.x, bounds.topRight.y)\r\n    //9\r\n    quadTo(handlePoint.x, handlePoint.y, bounds.bottomLeft.x, bounds.bottomLeft.y)\r\n    //10\r\n    close()\r\n  }\r\n\r\n  //11\r\n  canvas.drawPath(curvePath, paint)\r\n}\r\n</pre>\n<p>This diagram will help you understand the code you added. Use it as a guide to the proper coordinates for each point you'll build to create the path:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/05/custom_shape2_black_dashed.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/05/custom_shape2_black_dashed-449x320.png\" alt=\"Path for new arc\" width=\"449\" height=\"320\" class=\"aligncenter size-medium bordered wp-image-250347\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/05/custom_shape2_black_dashed-449x320.png 449w, https://koenig-media.raywenderlich.com/uploads/2020/05/custom_shape2_black_dashed-650x463.png 650w\" sizes=\"(max-width: 449px) 100vw, 449px\"></a></p>\n<p>In the previous code:</p>\n<ol>\n<li>You create a <code>Paint</code> object and set its color to a darker shade of the profile color.</li>\n<li>Then, you create a handle point at the top left corner of the <code>RectF</code>, shifted to the right by 25% of the width of the <code>RectF</code>. This is <em>P6</em> in the guide image.</li>\n<li>You create a <code>Path</code> object.</li>\n<li>Then, you move to the bottom-left corner, <em>P1</em> in the guide image.</li>\n<li>You add a straight line that starts from <em>P1</em> and ends at <em>P2</em>: The middle point at the edge of the black dashed avatar bounds <code>RectF</code>.</li>\n<li>Then, starting from the current point, <em>P2</em>, add an arc in the upper- half region of the avatar bounds: The arc starts from the angle <code>-180</code> degrees and sweeps by <code>180</code> degrees ending in <em>P3</em>.<br>\nYou pass <code>false</code> as the last parameter so you don't start a new sub-path for the arc. This tells Android that you want the arc on the same path.</li>\n<li>You add a straight line that starts from the current point and ends at the given point, the bottom-right corner. This adds a line from <em>P3</em> to <em>P4</em>.</li>\n<li>Then, you add a straight line that starts from the current point and ends at the given point, the top-right corner, adding a line from <em>P4</em> to <em>P5</em>.</li>\n<li>You add a quadratic Bézier curve that starts from the current point, <em>P5</em>, and ends at the bottom-left corner, <em>P1</em>, using the handle point you created in step two.</li>\n<li>Finally, you close the path, even though it's not required this time since you are back at the beginning point on the path.</li>\n<li>You draw <code>curvePath</code> on the canvas by passing it to <code>drawPath()</code> along with the <code>paint</code> object.</li>\n</ol>\n<h3 id=\"toc-anchor-020\">Finalizing the Curve</h3>\n<p>You're almost finished creating the curve. In <code>ProfileCardPainter</code>, go to the last line in <code>paint()</code> and add the following code:</p>\n<pre lang=\"kotlin\">\r\n//1\r\nval curvedShapeBounds = RectFFactory.fromLTRB(\r\n    shapeBounds.left,\r\n    shapeBounds.top + shapeBounds.height() * 0.35f,\r\n    shapeBounds.right,\r\n    shapeBounds.bottom\r\n)\r\n//2\r\ndrawCurvedShape(canvas, curvedShapeBounds, avatarBounds)\r\n</pre>\n<p>Here, you:</p>\n<ol>\n<li>Create a <code>RectF</code> that is similar to the <code>shapeBounds</code> rect, except you've shifted its top slightly to the bottom by 35% of the <code>shapeBounds</code>' height: This is the <em>red dashed</em> <code>RectF</code> in the image above.</li>\n<li>Call <code>drawCurvedShape()</code> and pass the <code>canvas</code> object, the curved shape bounds and the avatar bounds to it.</li>\n</ol>\n<p>Build and run the app to see the neat background curve behind the avatar:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/03/curved_shape.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/03/curved_shape.png\" alt=\"Add a curve behind the avatar\" width=\"330\" class=\"aligncenter bordered size-full bordered wp-image-250567\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/03/curved_shape.png 1440w, https://koenig-media.raywenderlich.com/uploads/2020/03/curved_shape-180x320.png 180w, https://koenig-media.raywenderlich.com/uploads/2020/03/curved_shape-281x500.png 281w\" sizes=\"(max-width: 1440px) 100vw, 1440px\"></a></p>\n<p>So you're done, right? Almost. There's still one more finishing touch you need to add.</p>\n<h3 id=\"toc-anchor-021\">Adding Gradient Paint</h3>\n<p>You've created your first beautiful, custom curved shape, but your graphic designer wants you to do one more thing: Add gradient colors to your curved shape.</p>\n<p>There are different types of shaders or gradients, including <em>linear gradients</em>, which transition through at least two colors in a straight line, and <em>radial gradients</em>, which transition through colors starting from a central point and radiating outward.</p>\n<p>Right now, you'll create a shader, a linear gradient described by three colors. Each color needs a <em>stop</em> to specify its position on a line from <em>0.0</em> to <em>1.0</em>.</p>\n<p>Start by creating a new function called <code>createGradient()</code> inside <code>ProfileCardPainter</code> with the following code:</p>\n<pre lang=\"kotlin\">\r\n\r\nprivate fun createGradient(bounds: RectF): LinearGradient {\r\n  //1\r\n  val colors = intArrayOf(color.darkerShade(), color, color.darkerShade())\r\n  //2\r\n  val stops = floatArrayOf(0.0f, 0.3f, 1.0f)\r\n  //3\r\n  return LinearGradient(\r\n      bounds.centerLeft.x, bounds.centerLeft.y,\r\n      bounds.centerRight.x, bounds.centerRight.y,\r\n      colors,\r\n      stops,\r\n      Shader.TileMode.REPEAT\r\n  )\r\n}\r\n</pre>\n<p>Here's what's going on in this code:</p>\n<ol>\n<li>You create a list of <em>three colors</em>, where the middle color is the profile color and the first and last colors are darker shades of that profile color.</li>\n<li>Then you create a list of <em>three stops</em>. The first is 0.0, which puts the corresponding color in the colors list at the zero position of the gradient color. In the same way, the middle and the stops specify the positions of their corresponding colors in the color list.</li>\n<li>Finally, you create a <em>linear gradient</em> by passing the <em>start</em> coordinates and the <em>end</em> coordinates of the gradient with the given <em>colors</em> and <em>stops</em>, and the shader <em>TileMode</em> to repeat the gradient in case the area which you fill is larger than the shader you created.</li>\n</ol>\n<p>Now go to <code>drawCurvedShape()</code> and update the <code>paint</code> object to use the new linear gradient instead of a solid color.</p>\n<p>Replace this line: </p>\n<pre lang=\"kotlin\">\r\npaint.color = color.darkerShade()\r\n</pre>\n<p>With this one:</p>\n<pre lang=\"kotlin\">\r\npaint.shader = createGradient(bounds)\r\n</pre>\n<p>Here, you create a new gradient and set it to the <code>paint</code> object.</p>\n<p>Finally, build and run the app to see a gradient within the background curve:</p>\n<p><a href=\"https://koenig-media.raywenderlich.com/uploads/2020/03/gardient_shape.png\" rel=\"noopener\" target=\"_blank\"><img src=\"https://koenig-media.raywenderlich.com/uploads/2020/03/gardient_shape.png\" alt=\"Background curve with gradient\" width=\"330\" class=\"aligncenter bordered size-full wp-image-250568\" srcset=\"https://koenig-media.raywenderlich.com/uploads/2020/03/gardient_shape.png 1440w, https://koenig-media.raywenderlich.com/uploads/2020/03/gardient_shape-180x320.png 180w, https://koenig-media.raywenderlich.com/uploads/2020/03/gardient_shape-281x500.png 281w\" sizes=\"(max-width: 1440px) 100vw, 1440px\"></a></p>\n<p>Congratulations! You've created a beautiful profile card with an eye-catching custom background shape and shading.</p>\n<h2 id=\"toc-anchor-022\">Where to Go From Here?</h2>\n<p>You can download the completed final project using the <em>Download Materials</em> button at the top or bottom of the tutorial.</p>\n<p>Wow, that was a lot of work! But you learned a lot, too. In addition to taking a deep look at <code>Canvas</code> and many Android Graphics APIs, you learned how to:</p>\n<ul>\n<li>Prepare your custom shape on paper before coding.</li>\n<li>Use <code>Path</code> and how to add different lines to it sequentially.</li>\n<li>Draw a curved shape in gradient colors.</li>\n</ul>\n<p>To learn more about <code>Canvas</code> and Android custom views check out the following links:</p>\n<ul>\n<li><a href=\"https://www.raywenderlich.com/142-android-custom-view-tutorial\" rel=\"noopener\" target=\"_blank\">Android Custom View Tutorial.</a></li>\n<li><a href=\"https://developer.android.com/training/custom-views/making-interactive\" rel=\"noopener\" target=\"_blank\">Making your drawing Interactive.</a></li>\n<li>\n<a href=\"https://medium.com/@Tarek360/fast-way-to-android-compound-view-f8c477b052a9\" rel=\"noopener\" target=\"_blank\">Custom Android Compound View.</a>\n</li>\n</ul>\n<p>Also, you can check <a href=\"https://github.com/tarek360/RichPath\" rel=\"noopener\" target=\"_blank\"><em>RichPath</em></a> library. It's an open-source library that gives you full control over your custom shapes in vector drawable format so you can manipulate and animate them easily at runtime.</p>\n<p>Feel free to share your feedback, comments or ask questions in the forum below. Don't stop drawing. ;]</p>\n\n"
        }
    }
  ]
}
